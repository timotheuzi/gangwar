import os
import random
import secrets
import subprocess
import sys
import time
import threading
import json
from dataclasses import dataclass, asdict, field
from typing import Dict, List, Optional, Tuple

from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort, flash

# Load NPCs
try:
    with open('npcs.json', 'r') as f:
        npcs_data = json.load(f)
except FileNotFoundError:
    npcs_data = {}

# Load Rooms
try:
    with open('rooms.json', 'r') as f:
        rooms_data = json.load(f)
except FileNotFoundError:
    rooms_data = {}

# Load Wander Events
try:
    with open('wander_events.json', 'r') as f:
        wander_events_data = json.load(f)
except FileNotFoundError:
    wander_events_data = {}

# ============
# High Scores
# ============

HIGH_SCORES_FILE = 'high_scores.json'

@dataclass
class HighScore:
    player_name: str
    gang_name: str
    score: int
    money_earned: int
    days_survived: int
    gang_wars_won: int
    fights_won: int
    date_achieved: str

def load_high_scores() -> List[HighScore]:
    """Load high scores from file"""
    try:
        if os.path.exists(HIGH_SCORES_FILE):
            with open(HIGH_SCORES_FILE, 'r') as f:
                data = json.load(f)
                return [HighScore(**score) for score in data]
    except Exception as e:
        print(f"Error loading high scores: {e}")
    return []

def save_high_scores(scores: List[HighScore]):
    """Save high scores to file"""
    try:
        data = [asdict(score) for score in scores]
        with open(HIGH_SCORES_FILE, 'w') as f:
            json.dump(data, f, indent=2)
    except Exception as e:
        print(f"Error saving high scores: {e}")

def calculate_score(money_earned: int, days_survived: int, gang_wars_won: int, fights_won: int) -> int:
    """Calculate total score based on achievements"""
    # Money earned contributes 1 point per $1000
    money_score = money_earned // 1000

    # Days survived contributes 100 points per day
    survival_score = days_survived * 100

    # Gang war victories contribute 1000 points each
    gang_war_score = gang_wars_won * 1000

    # Individual fights won contribute 50 points each
    fight_score = fights_won * 50

    return money_score + survival_score + gang_war_score + fight_score

# ============
# Game State
# ============

@dataclass
class Flags:
    has_id: bool = False
    has_info: bool = False

@dataclass
class Drugs:
    weed: int = 0
    crack: int = 5
    coke: int = 0
    ice: int = 0
    percs: int = 0
    pixie_dust: int = 0

@dataclass
class Weapons:
    pistols: int = 0
    bullets: int = 0
    uzis: int = 0
    grenades: int = 0
    barbed_wire_bat: int = 0
    missile_launcher: int = 0
    missiles: int = 0
    vest: int = 0
    knife: int = 0
    ghost_guns: int = 0

    def can_fight_with_pistol(self):
        return self.pistols > 0 and self.bullets > 0

@dataclass
class GameState:
    player_name: str = ""
    gang_name: str = ""
    money: int = 1000
    account: int = 0
    loan: int = 0
    members: int = 1
    squidies: int = 25
    squidies_pistols: int = 10
    squidies_uzis: int = 5
    squidies_bullets: int = 100
    squidies_grenades: int = 20
    squidies_missile_launcher: int = 2
    squidies_missiles: int = 10
    day: int = 1
    health: int = 30
    steps: int = 0
    max_steps: int = 15
    current_score: int = 0
    current_location: str = "city"
    drug_prices: Dict[str, int] = field(default_factory=lambda: {
        'weed': 500,
        'crack': 1000,
        'coke': 2000,
        'ice': 1500,
        'percs': 800,
        'pixie_dust': 3000
    })
    lives: int = 3
    damage: int = 0
    flags: Flags = field(default_factory=Flags)
    weapons: Weapons = field(default_factory=Weapons)
    drugs: Drugs = field(default_factory=Drugs)

# ============
# Game Logic
# ============

def get_game_state():
    """Get current game state from session"""
    if 'game_state' not in session:
        session['game_state'] = asdict(GameState())
    game_dict = session['game_state']
    # Convert nested dicts back to objects
    game_dict['flags'] = Flags(**game_dict.get('flags', {}))

    # Handle weapons with potential unknown attributes from old saves
    weapons_dict = game_dict.get('weapons', {})
    # Filter out any unknown weapon attributes
    valid_weapon_attrs = ['pistols', 'bullets', 'uzis', 'grenades', 'barbed_wire_bat', 'missile_launcher', 'missiles', 'vest', 'knife', 'ghost_guns']
    filtered_weapons = {k: v for k, v in weapons_dict.items() if k in valid_weapon_attrs}
    game_dict['weapons'] = Weapons(**filtered_weapons)

    game_dict['drugs'] = Drugs(**game_dict.get('drugs', {}))
    return GameState(**game_dict)

def update_current_score(game_state):
    """Update the current score based on achievements"""
    money_earned = game_state.money + game_state.account
    days_survived = game_state.day
    # For current score, we don't track gang wars/fights won in real-time,
    # so we'll base it on money and days survived for now
    game_state.current_score = calculate_score(money_earned, days_survived, 0, 0)

def save_game_state(game_state):
    """Save game state to session"""
    # Update current score before saving
    update_current_score(game_state)
    session['game_state'] = asdict(game_state)
    session.modified = True

# def check_and_update_high_scores(game_state: GameState, gang_wars_won: int = 0, fights_won: int = 0):
#     """Check if current game qualifies for high score and update if necessary"""
#     if not game_state.player_name or not game_state.gang_name:
#         return

#     # Calculate current achievements
#     money_earned = game_state.money + game_state.account  # Include savings
#     days_survived = game_state.day

#     # Calculate score
#     score = calculate_score(money_earned, days_survived, gang_wars_won, fights_won)

#     # Load existing high scores
#     high_scores = load_high_scores()

#     # Create new high score entry
#     new_score = HighScore(
#         player_name=game_state.player_name,
#         gang_name=game_state.gang_name,
#         score=score,
#         money_earned=money_earned,
#         days_survived=days_survived,
#         gang_wars_won=gang_wars_won,
#         fights_won=fights_won,
#         date_achieved=time.strftime("%Y-%m-%d %H:%M:%S")
#     )

#     # Add to list and sort by score (highest first)
#     high_scores.append(new_score)
#     high_scores.sort(key=lambda x: x.score, reverse=True)

#     # Keep only top 10 scores
#     high_scores = high_scores[:10]

#     # Save updated high scores
#     save_high_scores(high_scores)


# ============
# Flask App
# ============

app = Flask(__name__)
app.secret_key = 'gangwar_secret_key_2024'

# Check if running in PyInstaller bundle
try:
    # Try to import SocketIO
    from flask_socketio import SocketIO, emit, join_room, leave_room
    socketio = SocketIO(app)
except (ImportError, AttributeError):
    # SocketIO not available - disable it
    socketio = None

# Global player tracking
connected_players = {}

# ============
# Routes
# ============

@app.route('/')
def index():
    """Main index page"""
    return render_template('index.html')

@app.route('/high_scores')
def high_scores():
    """Display all-time high scores"""
    scores = load_high_scores()
    return render_template('high_scores.html', high_scores=scores)

@app.route('/credits')
def credits():
    """Display credits and high scores"""
    scores = load_high_scores()
    return render_template('credits.html', high_scores=scores)

@app.route('/city')
def city():
    """City hub"""
    game_state = get_game_state()
    game_state.current_location = "city"
    save_game_state(game_state)
    return render_template('city.html', game_state=game_state)

@app.route('/crackhouse')
def crackhouse():
    """Big Johnny's Crack House"""
    game_state = get_game_state()
    game_state.current_location = "crackhouse"
    save_game_state(game_state)
    return render_template('crackhouse.html', game_state=game_state)

@app.route('/gunshack')
def gunshack():
    """Little Johnny's Gun Shack"""
    game_state = get_game_state()
    return render_template('gunshack.html', game_state=game_state)

@app.route('/buy_weapon', methods=['POST'])
def buy_weapon():
    """Handle weapon purchases"""
    game_state = get_game_state()
    weapon_type = request.form.get('weapon_type')
    quantity = int(request.form.get('quantity', 1))

    weapon_prices = {
        'pistol': 1200,
        'bullets': 100,
        'uzi': 100000,
        'grenade': 1000,
        'barbed_wire_bat': 2500,
        'missile_launcher': 1000000,
        'missile': 100000,
        'vest_light': 30000,
        'vest_medium': 55000,
        'vest_heavy': 75000
    }

    if weapon_type not in weapon_prices:
        flash("Invalid weapon type!", "danger")
        return redirect(url_for('gunshack'))

    price = weapon_prices[weapon_type]
    total_cost = price * quantity

    if game_state.money >= total_cost:
        game_state.money -= total_cost

        if weapon_type == 'pistol':
            game_state.weapons.pistols += quantity
        elif weapon_type == 'bullets':
            game_state.weapons.bullets += quantity * 50  # 50 bullets per pack
        elif weapon_type == 'uzi':
            game_state.weapons.uzis += quantity
        elif weapon_type == 'grenade':
            game_state.weapons.grenades += quantity
        elif weapon_type == 'barbed_wire_bat':
            game_state.weapons.barbed_wire_bat += quantity
        elif weapon_type == 'missile_launcher':
            game_state.weapons.missile_launcher += quantity
        elif weapon_type == 'missile':
            game_state.weapons.missiles += quantity
        elif weapon_type.startswith('vest_'):
            if weapon_type == 'vest_light':
                game_state.weapons.vest += 5
            elif weapon_type == 'vest_medium':
                game_state.weapons.vest += 10
            elif weapon_type == 'vest_heavy':
                game_state.weapons.vest += 15

        flash(f"You bought {quantity} {weapon_type.replace('_', ' ')}(s) for ${total_cost:,}!", "success")
    else:
        flash(f"You don't have enough money! Need ${total_cost:,}.", "danger")

    save_game_state(game_state)
    return redirect(url_for('gunshack'))

@app.route('/bar')
def bar():
    """Vagabond's Pub"""
    game_state = get_game_state()
    return render_template('bar.html', game_state=game_state)

@app.route('/bank')
def bank():
    """Savings and Loan"""
    game_state = get_game_state()
    return render_template('bank.html', game_state=game_state)

@app.route('/infobooth')
def infobooth():
    """Info Booth"""
    game_state = get_game_state()
    return render_template('infobooth.html', game_state=game_state)

@app.route('/alleyway')
def alleyway():
    """Explore Dark Alleyway"""
    game_state = get_game_state()
    game_state.current_location = "alleyway"
    save_game_state(game_state)

    # Get current room from session, default to entrance
    current_room_id = session.get('current_alleyway_room', 'entrance')
    current_room = rooms_data.get(current_room_id, rooms_data['entrance'])

    return render_template('alleyway.html', game_state=game_state, current_room=current_room)

@app.route('/stats')
def stats():
    """View Stats"""
    game_state = get_game_state()
    return render_template('stats.html', game_state=game_state)

@app.route('/final_battle')
def final_battle():
    """FINAL BATTLE: Destroy Squidies"""
    game_state = get_game_state()
    message = "You launch your final assault on the Squidies gang headquarters!"
    # Start MUD fight with Squidies
    enemy_health = game_state.squidies * 20  # Each Squidie has 20 health
    enemy_type = f"The Squidies Gang ({game_state.squidies} members)"
    combat_active = True
    combat_id = f"final_battle_{random.randint(1000, 9999)}"

    # Initialize fight log
    fight_log = [f"You launch your final assault on the Squidies gang headquarters!", f"Combat begins against {enemy_type}!"]
    session['fight_log'] = fight_log
    session.modified = True

    return render_template('mud_fight.html', game_state=game_state, enemy_health=enemy_health, enemy_type=enemy_type, enemy_count=game_state.squidies, combat_active=combat_active, combat_id=combat_id, fight_log=fight_log)

@app.route('/wander')
def wander():
    """Wander the Streets"""
    game_state = get_game_state()
    result = ""  # Initialize result variable

    # Check for police chase (10% chance)
    if random.random() < 0.1:
        if game_state.flags.has_id:
            result = "You see a police patrol but your fake ID saves you from getting stopped!"
            flash("Your fake ID protected you from police harassment!", "success")
        else:
            # Police chase sequence - redirect to MUD fight
            num_cops = random.randint(2, 6)
            message = f"Oh no! {num_cops} police officers spot you and give chase!"
            save_game_state(game_state)
            enemy_health = num_cops * 10  # Each cop has 10 health
            enemy_type = f"{num_cops} Police Officers"
            combat_active = True
            combat_id = f"police_{random.randint(1000, 9999)}"

            # Initialize fight log
            fight_log = [f"Oh no! {num_cops} police officers spot you and give chase!", f"Combat begins against {enemy_type}!"]
            session['fight_log'] = fight_log
            session.modified = True

            return render_template('mud_fight.html', game_state=game_state, enemy_health=enemy_health, enemy_type=enemy_type, enemy_count=num_cops, combat_active=combat_active, combat_id=combat_id, fight_log=fight_log)

    # Check for baby momma incident (8% chance)
    elif random.random() < 0.08:
        result = random.choice(wander_events_data.get('baby_momma_messages', [
            "Your baby momma spots you from across the street and starts yelling about child support!",
            "You run into one of your many baby mommas who demands money for the kids!",
            "A woman approaches you claiming you're the father of her child and demands $500!",
            "You see your ex approaching with a determined look - she wants money for the kids!"
        ]))
        # Lose money if you have it
        if game_state.money >= 200:
            game_state.money -= 200
            result += f" You pay her $200 to make her go away."
        elif game_state.money >= 100:
            game_state.money -= 100
            result += f" You give her $100 to calm her down."
        else:
            result += " You don't have any money to give her!"
            game_state.health = max(0, game_state.health - 10)  # She beats you up

    # Check for small gang fight (12% chance)
    elif random.random() < 0.12:
        enemy_members = random.randint(3, 8)
        message = f"You encounter {enemy_members} rival gang members looking for trouble!"
        save_game_state(game_state)
        # Start MUD fight
        enemy_health = enemy_members * 15  # Each gang member has 15 health
        enemy_type = f"{enemy_members} Rival Gang Members"
        combat_active = True
        combat_id = f"gang_{random.randint(1000, 9999)}"

        # Initialize fight log
        fight_log = [f"You encounter {enemy_members} rival gang members looking for trouble!", f"Combat begins against {enemy_type}!"]
        session['fight_log'] = fight_log
        session.modified = True

        return render_template('mud_fight.html', game_state=game_state, enemy_health=enemy_health, enemy_type=enemy_type, enemy_count=enemy_members, combat_active=combat_active, combat_id=combat_id, fight_log=fight_log)

    # Check for Squidie hit squad (scales with gang power)
    elif game_state.members >= 3:  # Only when you have some gang presence
        # Base chance starts low, increases with gang size and success
        base_chance = 0.02  # 2% base chance
        gang_multiplier = min(game_state.members / 10, 2.0)  # Up to 2x multiplier at 10+ members
        money_multiplier = min(game_state.money / 10000, 1.5)  # Up to 1.5x for $10k+
        total_chance = base_chance * gang_multiplier * money_multiplier

        if random.random() < total_chance:
            squidie_members = random.randint(2, min(6, max(2, game_state.members // 2 + 1)))
            message = f"Oh no! A Squidie hit squad of {squidie_members} members has tracked you down!"
            save_game_state(game_state)
            # Start MUD fight with Squidies
            enemy_health = squidie_members * 25  # Squidies are tougher (25 HP each)
            enemy_type = f"{squidie_members} Squidie Hit Squad"
            combat_active = True
            combat_id = f"squidie_{random.randint(1000, 9999)}"

            # Initialize fight log
            fight_log = [f"Oh no! A Squidie hit squad of {squidie_members} members has tracked you down!", f"Combat begins against {enemy_type}!"]
            session['fight_log'] = fight_log
            session.modified = True

            return render_template('mud_fight.html', game_state=game_state, enemy_health=enemy_health, enemy_type=enemy_type, enemy_count=squidie_members, combat_active=combat_active, combat_id=combat_id, fight_log=fight_log)

    # Regular wander results (remaining ~70% chance)
    else:
        # List of possible wander results
        wander_messages = [
            "You wander the bustling streets of the city, your footsteps echoing off cracked sidewalks littered with cigarette butts and crumpled fast-food wrappers, when you spot a worn leather wallet half-hidden beneath a pile of discarded newspapers. As you pick it through the grime, you discover $50 in crumpled bills and a few expired credit cards, the previous owner's misfortune becoming your unexpected windfall in this unforgiving urban jungle.",
            "You encounter a street performer on a crowded corner, his guitar case open for donations as he strums soulful melodies that cut through the city's constant din. He pauses his song to give you some insider tips about the local scene - which alleys to avoid after dark, which bars serve the cheapest drinks, and which neighborhoods are currently under gang control, his weathered face telling stories of a life lived on the edge of society's underbelly.",
            "You overhear a group of heavily tattooed gang members huddled in a shadowy doorway, their low voices carrying snippets of conversation about upcoming turf wars and power struggles. Their gold chains glint under the streetlights as they discuss rival crews, planned hits, and the shifting alliances that keep the city's criminal underworld in constant flux, their words painting a picture of a dangerous game where one wrong move could mean the difference between ruling the streets or ending up in an unmarked grave.",
            "You find a quiet spot tucked away in a small park where the city's relentless pace seems to slow for just a moment, the grass worn thin by countless footsteps and the benches scarred with graffiti tags. You sit and rest, letting the relative peace wash over you as your body begins to heal from the accumulated wounds of street life, the distant sounds of traffic and sirens fading into background noise as you regain some much-needed health and clarity of mind.",
            "You notice some suspicious activity unfolding in a nearby alley - shadowy figures exchanging packages in hurried whispers, their nervous glances and fidgeting hands betraying the illicit nature of their transaction. You decide to keep moving, your instincts screaming that getting involved would only lead to trouble, the air thick with tension as you slip away unnoticed, leaving whatever shady deal was about to go down to unfold without your participation.",
            "You bump into an old contact from your past life on the streets, his face lined with the hard years and his clothes hanging loose on a frame that's seen too many lean times. He pulls you aside and shares some juicy gossip about recent events - which gang leaders have fallen out of favor, which cops are on the take, and which new players are making moves to claim territory, his words a valuable currency in the information-starved world of street hustling.",
            "You wander into a rough neighborhood where the buildings seem to lean in threateningly and the streets are patrolled by wary locals who size you up as a potential threat. The air is thick with the scent of cooking grease mixed with something more acrid, and you narrowly avoid trouble by keeping your head down and moving with purpose, the hostile stares following you like shadows until you finally escape back to more familiar territory.",
            "You find some discarded drugs carelessly left behind in a filthy alley, the small packages wrapped in plastic and hidden beneath a pile of rotting garbage that makes your stomach turn. Worth $200 on the street, this unexpected score represents someone's carelessness becoming your opportunity, the drugs promising either profit through resale or personal use to dull the sharp edges of life in the city's unforgiving underbelly.",
            "You help a local shopkeeper who's struggling with a heavy delivery, his small grocery store tucked between two towering apartment buildings that block out most of the sunlight. In gratitude, he rewards you with valuable information about the neighborhood - which buildings have working elevators, which back alleys lead to quick escapes, and which local characters are worth knowing, his words proving more valuable than any cash payment in this information-driven world.",
            "You wander around the city without incident, the streets flowing past you like a familiar but dangerous river that you navigate with the practiced ease of someone who's learned to survive its currents. The crowds part around you, the vendors hawk their wares, and the traffic flows in its endless rhythm, giving you a brief respite from the constant threats and opportunities that define life in this sprawling metropolis of concrete and ambition.",
            "You see a police patrol cruising slowly down the street, their spotlights cutting through the gathering dusk like accusatory fingers searching for wrongdoing. You quickly duck into a nearby alley, pressing yourself against the cold brick wall as the cruiser passes, your heart pounding with the familiar mix of adrenaline and paranoia that comes from living a life that exists in the gray areas between legal and illegal, the sirens fading into the distance as you catch your breath.",
            "You find a hidden stash of weapons cleverly concealed behind a loose brick in an abandoned building, the cold metal gleaming in the dim light filtering through cracked windows. A small cache of ammunition and perhaps a few extra firearms that could turn the tide in a street confrontation, this discovery represents the kind of opportunity that keeps people coming back to the city's dangerous underbelly, where fortunes can be made or lost in the blink of an eye.",
            "You encounter a beggar huddled in a doorway, his clothes ragged and his face weathered by exposure to the elements and the hard knocks of street life. He tells you about secret locations scattered throughout the city - hidden speakeasies where deals are made, abandoned warehouses that serve as temporary hideouts, and forgotten tunnels that connect different parts of the underworld, his words a map to places that most people never even know exist.",
            "You wander through a vibrant market district where vendors shout their prices and haggle with customers over everything from fresh produce to stolen electronics, the air thick with the mingled scents of spices, street food, and the underlying musk of urban commerce. You engage in some spirited bargaining, managing to get better prices on various goods through a combination of charm, persistence, and the subtle art of negotiation that defines successful street-level trading.",
            "You stumble upon a gang recruitment drive taking place in a dimly lit parking lot, where charismatic leaders try to convince impressionable young men and women to join their crews with promises of money, power, and protection. The recruiters speak passionately about loyalty, territory, and the brotherhood of the streets, their words painting a picture of excitement and danger that both repels and attracts those looking for a way to escape the drudgery of ordinary life in the city.",
            "You discover an abandoned subway entrance overgrown with weeds, its rusted turnstiles standing guard over darkness that seems to swallow light itself. The faint echo of dripping water and distant train rumblings creates an eerie symphony that makes you wonder what secrets might lie in the labyrinthine tunnels below the city streets.",
            "You pass by a group of street kids playing dice in a filthy alley, their laughter cutting through the urban decay like shards of broken glass. One of them notices you watching and challenges you to a game, his eyes gleaming with the desperate hope of someone who's learned to survive on wits and luck alone in this unforgiving concrete jungle.",
            "You find yourself in a narrow alley where the buildings rise like canyon walls, blocking out the sky and creating a twilight world even in broad daylight. The air is thick with the competing scents of Chinese takeout, fresh bread from a nearby bakery, and the ever-present undercurrent of urban decay that defines life in the city's forgotten spaces.",
            "You stumble upon a makeshift memorial in a quiet side street - faded photographs, wilting flowers, and handwritten notes taped to a lamppost commemorating someone who fell victim to the city's endless cycle of violence. The sight gives you pause, a momentary reminder that beneath the bravado and brutality, there are real lives and real losses in this endless gang war.",
            "You encounter a street preacher standing on a milk crate, his voice rising above the traffic noise as he rails against the sins of the city - the greed, the violence, the moral decay that has infected the soul of this once-great metropolis. His words cut deep, making you question whether you're part of the problem or just another victim of the system.",
            "You find a hidden courtyard behind a row of brownstones, a secret garden oasis where residents have created a communal space of potted plants, string lights, and weathered furniture. The peaceful atmosphere is a stark contrast to the chaos of the streets, offering a brief respite from the constant threat of violence that defines life in the city's underbelly.",
            "You pass through a bustling intersection where vendors hawk everything from bootleg DVDs to counterfeit designer bags, their voices rising in a cacophony of sales pitches that blend into the city's endless soundtrack. The energy is infectious, a reminder that despite the danger and decay, life in the city pulses with an undeniable vitality.",
            "You discover a forgotten loading dock behind an abandoned warehouse, its massive roll-up doors standing open like the maw of some industrial beast. Inside, you glimpse the skeletal remains of machinery long since stripped for parts, a testament to the city's relentless cycle of creation and destruction.",
            "You encounter a group of elderly men playing dominoes on a folding table in a tiny park, their laughter and banter cutting through the tension of the streets like a knife through butter. For a moment, you glimpse the human side of the city - the quiet dignity and resilience of those who have survived decades of urban warfare.",
            "You find yourself in a narrow pedestrian alley lined with boutique shops and upscale cafes, a gentrified oasis in the midst of decay where the wealthy come to pretend the city's problems don't exist. The contrast between this polished facade and the gritty reality just blocks away is almost comical in its absurdity.",
            "You stumble upon a community garden project where local residents have transformed a vacant lot into a thriving patch of vegetables and flowers, their determination to create beauty in the midst of urban blight a quiet act of defiance against the forces that seek to grind the human spirit into dust.",
            "You pass by a group of construction workers taking their lunch break, their hard hats stacked like trophies as they share stories of the city's underbelly - the hidden speakeasies, the underground fights, the secret deals that keep the city's economy flowing despite the endless gang warfare.",
            "You discover a tiny bookstore tucked away in a basement, its shelves crammed with rare volumes and forgotten tomes that speak of worlds beyond the city's concrete confines. The elderly proprietor looks up from his ledger with knowing eyes, as if he can see the stories written in the lines of your face.",
            "You find a public fountain in a small plaza, its waters dancing in the sunlight despite the grime and neglect that surrounds it. Local kids splash and play while their parents watch from benches, creating a momentary bubble of normalcy in the midst of the city's endless chaos.",
            "You encounter a food truck festival that has taken over a parking lot, the air thick with the competing aromas of tacos, falafel, and barbecue. The crowd's laughter and chatter create a festive atmosphere that temporarily drowns out the ever-present threat of violence lurking just beyond the food stalls.",
            "You discover an art installation in an empty lot - a massive mural depicting the city's history from its industrial glory days to its current state of gang warfare, the artist's message clear in the way the colors fade from vibrant hope to the bleak grays of despair.",
            "You pass through a residential neighborhood where front stoops serve as social centers, elderly residents watching the world go by from their rocking chairs while children play hopscotch on the cracked sidewalks. It's a reminder that despite the gangs and the violence, communities still thrive in the city's forgotten corners.",
            "You find a jazz club tucked away in a basement, its neon sign flickering weakly in the daylight but promising nights of soulful music and illicit pleasures. The doorman eyes you suspiciously, as if trying to decide whether you're a customer or a threat to the delicate balance of this underground oasis.",
            "You stumble upon a flea market in an abandoned parking garage, vendors hawking everything from vintage clothing to mysterious electronic devices of questionable origin. The air is thick with the scent of old books, incense, and the faint metallic tang of stolen goods.",
            "You encounter a group of skateboarders practicing tricks in an empty pool turned skate park, their laughter and the clatter of wheels on concrete creating a soundtrack of youthful rebellion that cuts through the city's oppressive atmosphere like a breath of fresh air.",
            "You discover a rooftop garden on an apartment building, where residents have created a hidden paradise of potted plants, string lights, and comfortable seating. From this vantage point, the city spreads out below like a living organism, its veins of traffic pulsing with the rhythm of urban life.",
            "You pass by a soup kitchen serving hot meals to the city's homeless population, the line of ragged figures a sobering reminder of the human cost of the endless gang warfare that has ravaged this once-proud metropolis.",
            "You find a public library branch in a converted storefront, its shelves stocked with books that offer escape from the city's grim reality. The librarian looks up from her desk with a welcoming smile, offering knowledge as a weapon against the ignorance that fuels the city's endless cycle of violence.",
            "You encounter a group of musicians busking on a street corner, their instruments weaving a tapestry of sound that transforms the urban decay into something almost beautiful. For a moment, the city's soul shines through the grime, reminding you that creativity and humanity still persist despite the gangs and the guns.",
            "You discover a community center offering free classes in everything from computer skills to self-defense, its walls covered with posters advertising programs designed to give the city's youth alternatives to the gang life that claims so many of their peers.",
            "You pass through a historic district where ornate brownstones stand as monuments to the city's more prosperous past, their elegant facades a stark contrast to the decay that has claimed so much of the surrounding neighborhood.",
            "You find a tiny coffee shop with outdoor seating, where patrons sip lattes and discuss everything from local politics to the latest gang turf disputes. The normalcy of the scene is almost surreal given the violence that simmers just beneath the surface of daily life.",
            "You stumble upon a protest march winding through the streets, activists carrying signs demanding an end to the gang violence that has claimed so many lives. Their chants rise above the traffic noise, a chorus of hope battling against the despair that has gripped the city for so long.",
            "You encounter a group of tourists taking photographs of the city's gritty architecture, their wide-eyed wonder at the urban decay a reminder that what locals see as normal is exotic to outsiders. Their presence creates a momentary buffer against the ever-present threat of violence.",
            "You discover a hidden courtyard behind a restaurant, where diners enjoy their meals in peaceful seclusion despite the chaos of the streets just beyond the ivy-covered walls. The contrast between this oasis of calm and the surrounding turmoil is almost dizzying.",
            "You pass by a fire station where firefighters wash their trucks, their laughter and camaraderie a reminder that not everyone in the city has given in to the cycle of violence. Their presence offers a glimmer of hope in the midst of the endless gang warfare.",
            "You find a pet adoption event in a park, where volunteers try to find homes for abandoned animals while local musicians provide entertainment. The scene of compassion and community stands as a quiet rebuke to the selfishness and brutality that define so much of city life.",
            "You encounter a group of cyclists pedaling through the streets, their brightly colored jerseys and aerodynamic helmets a splash of color in the gray urban landscape. Their presence suggests that life and vitality still exist beyond the gangs and the guns.",
            "You discover a tiny theater company performing in a converted garage, their production a biting satire of the city's gang culture that draws both laughter and uncomfortable recognition from the audience.",
            "You pass through a farmers market where local growers sell fresh produce and handmade goods, creating a vibrant contrast to the concrete and steel that dominates so much of the cityscape. The fresh scents and bright colors offer a momentary escape from the urban decay.",
            "You find a public chess tournament taking place in a park pavilion, where players of all ages and backgrounds compete in a battle of wits rather than weapons. The concentration on their faces and the quiet intensity of the games offer a glimpse of the city's intellectual life.",
            "You stumble upon a group of volunteers cleaning up a vacant lot, their efforts to reclaim the space from decay a small but meaningful act of resistance against the forces that seek to drag the city further into despair.",
            "You encounter a mobile health clinic parked on a street corner, offering free medical care to those who can't afford it. The nurses and doctors work tirelessly to heal both the physical and emotional wounds inflicted by the city's endless cycle of violence.",
            "You discover a poetry slam taking place in a coffee shop, where young poets pour out their frustrations and hopes in rhythmic verses that capture the essence of life in the city's underbelly. Their words cut deep, exposing the raw emotions that lie beneath the tough exteriors.",
            "You pass by a group of children playing in a sprinkler on a hot summer day, their laughter a pure and innocent sound that temporarily drowns out the sirens and gunshots that punctuate life in the city. For a moment, the future seems possible despite the darkness of the present.",
            "You find a veterans support group meeting in a community center, where former soldiers share their experiences and offer each other the camaraderie that helped them survive war, now applied to surviving the peacetime battle of urban life.",
            "You encounter a group of environmental activists planting trees in a barren lot, their efforts to bring green life back to the city a quiet but determined act of hope in the face of overwhelming decay.",
            "You discover a tiny museum dedicated to the city's history, its exhibits chronicling everything from the industrial revolution that built the metropolis to the gang wars that threaten to tear it apart. The curator shares fascinating stories of the city's past glories and future possibilities.",
            "You pass through a neighborhood watch meeting in a local school, where residents gather to discuss ways to protect their community from the encroaching gang violence. Their determination to take back their streets offers a glimmer of hope in the darkness.",
            "You find a group of retirees volunteering at a local food bank, their wisdom and compassion a steadying influence in a city that often seems to have lost its moral compass in the fog of endless warfare.",
            "You stumble upon a flash mob dance performance in a public square, where ordinary people suddenly transform into a coordinated spectacle of movement and joy. The unexpected beauty of the moment cuts through the city's grim facade like a ray of sunlight through storm clouds.",
            "You encounter a group of scientists conducting urban ecology research in a vacant lot, studying how nature reclaims abandoned spaces. Their work offers scientific insights into the city's decay and potential for renewal.",
            "You discover a hidden art gallery in a loft space, where local artists display works that capture the beauty and brutality of city life. The curator explains how creativity serves as both an escape from and a confrontation with the urban reality.",
            "You pass by a group of historians leading a walking tour of the city's architectural landmarks, sharing stories of the buildings' past lives and the people who built them. Their passion for the city's history offers a connection to a time before the gangs divided the streets.",
            "You find a meditation group practicing in a park, their peaceful presence a quiet counterpoint to the chaos that surrounds them. Their focused breathing and calm demeanor create a bubble of tranquility in the midst of urban turmoil.",
            "You encounter a group of entrepreneurs pitching startup ideas at a co-working space, their energy and optimism a reminder that innovation and ambition still thrive in the city's competitive ecosystem.",
            "You discover a community choir rehearsing in a church basement, their harmonious voices rising in songs of hope and resilience. The music creates a momentary sanctuary from the discord of the streets outside.",
            "You pass through a neighborhood where residents have created a block party atmosphere, with barbecues and music filling the air. The sense of community and celebration stands as a defiant act against the isolation and fear fostered by the gang warfare.",
            "You find a group of teachers leading an after-school program for at-risk youth, offering alternatives to the gang life that threatens to claim so many young lives. Their dedication offers hope for the city's future generations.",
            "You stumble upon a group of urban foragers collecting edible plants from vacant lots, their knowledge of the city's hidden resources a testament to human ingenuity and adaptation in the face of urban decay.",
            "You encounter a mobile library parked on a street corner, bringing books and knowledge to neighborhoods that lack traditional library access. The librarian shares stories of how reading has transformed lives amidst the city's challenges.",
            "You discover a group of architects designing affordable housing solutions in a community workshop, their blueprints offering visions of a more equitable city that could rise from the ashes of the current gang-dominated landscape.",
            "You pass by a group of journalists investigating corruption in city government, their determination to expose the truth a crucial counterbalance to the secrecy and deception that enable the gang warfare.",
            "You find a support group for victims of gang violence in a community center, where survivors share their stories and find strength in solidarity. Their resilience offers hope that healing is possible even in the darkest circumstances.",
            "You encounter a group of urban planners mapping out green spaces and bike lanes for a more livable city, their vision of sustainable urban development a direct challenge to the destructive forces that currently shape the metropolis.",
            "You discover a group of chefs running a community kitchen, transforming donated ingredients into nutritious meals for those affected by the city's economic struggles. Their creativity in the face of scarcity is inspiring.",
            "You pass through a neighborhood where residents have organized a clean-up day, working together to reclaim their streets from the litter and decay that symbolize the city's decline. Their collective action demonstrates the power of community.",
            "You find a group of therapists offering free counseling to those traumatized by the city's violence, their professional compassion a vital resource for healing the psychological wounds of urban warfare.",
            "You stumble upon a group of filmmakers documenting life in the city's underbelly, their cameras capturing both the horror and the humanity that coexist in the gang-controlled streets.",
            "You encounter a group of social workers advocating for policy changes to address the root causes of gang violence, their systemic approach offering hope for long-term solutions to the city's problems.",
            "You discover a group of religious leaders from different faiths working together to promote peace and reconciliation in gang-divided neighborhoods, their interfaith dialogue a beacon of hope in divided times.",
            "You pass by a group of union organizers helping workers fight for better conditions in the city's remaining industries, their advocacy a reminder that economic justice is intertwined with ending the cycle of violence.",
            "You find a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You encounter a group of data analysts studying crime patterns to help police target interventions more effectively, their evidence-based approach a scientific counter to the emotional chaos of gang warfare.",
            "You discover a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You pass through a neighborhood where residents have created a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",
            "You encounter a group of epidemiologists tracking the health consequences of chronic stress from living in high-violence neighborhoods, their findings highlighting the urgent need for comprehensive interventions.",
            "You discover a group of legal aid attorneys providing free representation to those caught in the criminal justice system, their work challenging the inequities that perpetuate the cycle of violence.",
            "You pass by a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You find a group of community organizers building coalitions across neighborhood lines to demand better city services and economic opportunities, their cross-community alliances weakening the divisions that gangs exploit.",
            "You encounter a group of trauma-informed educators training teachers to recognize and respond to the effects of violence on student learning, their work addressing the educational consequences of growing up in war zones.",
            "You discover a group of public health officials implementing harm reduction strategies to minimize the damage from drug-related gang activities, their pragmatic approach saving lives while working toward long-term solutions.",
            "You pass through a neighborhood where residents have established a community currency system to build local economic resilience, their alternative economy reducing dependence on the illicit markets that fund gang activities.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of urban designers creating public spaces that naturally discourage crime and promote positive social interactions, their environmental design approach offering passive crime prevention.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of mental health professionals specializing in trauma recovery for those affected by gang violence, their therapeutic interventions addressing the psychological roots of the city's problems.",
            "You pass by a group of community developers creating mixed-use spaces that combine housing, retail, and public amenities to strengthen neighborhood cohesion and reduce the isolation that breeds gang recruitment.",
            "You find a group of policy analysts developing evidence-based strategies for gang prevention, their research informing more effective interventions than traditional law enforcement approaches.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of cultural organizers promoting arts and cultural activities that build community pride and provide positive alternatives to gang involvement, their creative approaches celebrating the city's diverse heritage.",
            "You pass through a neighborhood where residents have established a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",
            "You encounter a group of epidemiologists tracking the health consequences of chronic stress from living in high-violence neighborhoods, their findings highlighting the urgent need for comprehensive interventions.",
            "You discover a group of legal aid attorneys providing free representation to those caught in the criminal justice system, their work challenging the inequities that perpetuate the cycle of violence.",
            "You pass by a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You find a group of community organizers building coalitions across neighborhood lines to demand better city services and economic opportunities, their cross-community alliances weakening the divisions that gangs exploit.",
            "You encounter a group of trauma-informed educators training teachers to recognize and respond to the effects of violence on student learning, their work addressing the educational consequences of growing up in war zones.",
            "You discover a group of public health officials implementing harm reduction strategies to minimize the damage from drug-related gang activities, their pragmatic approach saving lives while working toward long-term solutions.",
            "You pass through a neighborhood where residents have established a community currency system to build local economic resilience, their alternative economy reducing dependence on the illicit markets that fund gang activities.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of urban designers creating public spaces that naturally discourage crime and promote positive social interactions, their environmental design approach offering passive crime prevention.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of mental health professionals specializing in trauma recovery for those affected by gang violence, their therapeutic interventions addressing the psychological roots of the city's problems.",
            "You pass by a group of community developers creating mixed-use spaces that combine housing, retail, and public amenities to strengthen neighborhood cohesion and reduce the isolation that breeds gang recruitment.",
            "You find a group of policy analysts developing evidence-based strategies for gang prevention, their research informing more effective interventions than traditional law enforcement approaches.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of cultural organizers promoting arts and cultural activities that build community pride and provide positive alternatives to gang involvement, their creative approaches celebrating the city's diverse heritage.",
            "You pass through a neighborhood where residents have established a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",
            "You encounter a group of epidemiologists tracking the health consequences of chronic stress from living in high-violence neighborhoods, their findings highlighting the urgent need for comprehensive interventions.",
            "You discover a group of legal aid attorneys providing free representation to those caught in the criminal justice system, their work challenging the inequities that perpetuate the cycle of violence.",
            "You pass by a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You find a group of community organizers building coalitions across neighborhood lines to demand better city services and economic opportunities, their cross-community alliances weakening the divisions that gangs exploit.",
            "You encounter a group of trauma-informed educators training teachers to recognize and respond to the effects of violence on student learning, their work addressing the educational consequences of growing up in war zones.",
            "You discover a group of public health officials implementing harm reduction strategies to minimize the damage from drug-related gang activities, their pragmatic approach saving lives while working toward long-term solutions.",
            "You pass through a neighborhood where residents have established a community currency system to build local economic resilience, their alternative economy reducing dependence on the illicit markets that fund gang activities.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of urban designers creating public spaces that naturally discourage crime and promote positive social interactions, their environmental design approach offering passive crime prevention.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of mental health professionals specializing in trauma recovery for those affected by gang violence, their therapeutic interventions addressing the psychological roots of the city's problems.",
            "You pass by a group of community developers creating mixed-use spaces that combine housing, retail, and public amenities to strengthen neighborhood cohesion and reduce the isolation that breeds gang recruitment.",
            "You find a group of policy analysts developing evidence-based strategies for gang prevention, their research informing more effective interventions than traditional law enforcement approaches.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of cultural organizers promoting arts and cultural activities that build community pride and provide positive alternatives to gang involvement, their creative approaches celebrating the city's diverse heritage.",
            "You pass through a neighborhood where residents have established a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",

        # Ensure randomness by seeding with current time
        random.seed(time.time())
        # Select a random message from JSON data
        wander_messages = wander_events_data.get('wander_messages', [
            "You wander the bustling streets of the city, your footsteps echoing off cracked sidewalks littered with cigarette butts and crumpled fast-food wrappers, when you spot a worn leather wallet half-hidden beneath a pile of discarded newspapers. As you pick it through the grime, you discover $50 in crumpled bills and a few expired credit cards, the previous owner's misfortune becoming your unexpected windfall in this unforgiving urban jungle.",
            "You encounter a street performer on a crowded corner, his guitar case open for donations as he strums soulful melodies that cut through the city's constant din. He pauses his song to give you some insider tips about the local scene - which alleys to avoid after dark, which bars serve the cheapest drinks, and which neighborhoods are currently under gang control, his weathered face telling stories of a life lived on the edge of society's underbelly.",
            "You overhear a group of heavily tattooed gang members huddled in a shadowy doorway, their low voices carrying snippets of conversation about upcoming turf wars and power struggles. Their gold chains glint under the streetlights as they discuss rival crews, planned hits, and the shifting alliances that keep the city's criminal underworld in constant flux, their words painting a picture of a dangerous game where one wrong move could mean the difference between ruling the streets or ending up in an unmarked grave.",
            "You find a quiet spot tucked away in a small park where the city's relentless pace seems to slow for just a moment, the grass worn thin by countless footsteps and the benches scarred with graffiti tags. You sit and rest, letting the relative peace wash over you as your body begins to heal from the accumulated wounds of street life, the distant sounds of traffic and sirens fading into background noise as you regain some much-needed health and clarity of mind.",
            "You notice some suspicious activity unfolding in a nearby alley - shadowy figures exchanging packages in hurried whispers, their nervous glances and fidgeting hands betraying the illicit nature of their transaction. You decide to keep moving, your instincts screaming that getting involved would only lead to trouble, the air thick with tension as you slip away unnoticed, leaving whatever shady deal was about to go down to unfold without your participation.",
            "You bump into an old contact from your past life on the streets, his face lined with the hard years and his clothes hanging loose on a frame that's seen too many lean times. He pulls you aside and shares some juicy gossip about recent events - which gang leaders have fallen out of favor, which cops are on the take, and which new players are making moves to claim territory, his words a valuable currency in the information-starved world of street hustling.",
            "You wander into a rough neighborhood where the buildings seem to lean in threateningly and the streets are patrolled by wary locals who size you up as a potential threat. The air is thick with the scent of cooking grease mixed with something more acrid, and you narrowly avoid trouble by keeping your head down and moving with purpose, the hostile stares following you like shadows until you finally escape back to more familiar territory.",
            "You find some discarded drugs carelessly left behind in a filthy alley, the small packages wrapped in plastic and hidden beneath a pile of rotting garbage that makes your stomach turn. Worth $200 on the street, this unexpected score represents someone's carelessness becoming your opportunity, the drugs promising either profit through resale or personal use to dull the sharp edges of life in the city's unforgiving underbelly.",
            "You help a local shopkeeper who's struggling with a heavy delivery, his small grocery store tucked between two towering apartment buildings that block out most of the sunlight. In gratitude, he rewards you with valuable information about the neighborhood - which buildings have working elevators, which back alleys lead to quick escapes, and which local characters are worth knowing, his words proving more valuable than any cash payment in this information-driven world.",
            "You wander around the city without incident, the streets flowing past you like a familiar but dangerous river that you navigate with the practiced ease of someone who's learned to survive its currents. The crowds part around you, the vendors hawk their wares, and the traffic flows in its endless rhythm, giving you a brief respite from the constant threats and opportunities that define life in this sprawling metropolis of concrete and ambition.",
            "You see a police patrol cruising slowly down the street, their spotlights cutting through the gathering dusk like accusatory fingers searching for wrongdoing. You quickly duck into a nearby alley, pressing yourself against the cold brick wall as the cruiser passes, your heart pounding with the familiar mix of adrenaline and paranoia that comes from living a life that exists in the gray areas between legal and illegal, the sirens fading into the distance as you catch your breath.",
            "You find a hidden stash of weapons cleverly concealed behind a loose brick in an abandoned building, the cold metal gleaming in the dim light filtering through cracked windows. A small cache of ammunition and perhaps a few extra firearms that could turn the tide in a street confrontation, this discovery represents the kind of opportunity that keeps people coming back to the city's dangerous underbelly, where fortunes can be made or lost in the blink of an eye.",
            "You encounter a beggar huddled in a doorway, his clothes ragged and his face weathered by exposure to the elements and the hard knocks of street life. He tells you about secret locations scattered throughout the city - hidden speakeasies where deals are made, abandoned warehouses that serve as temporary hideouts, and forgotten tunnels that connect different parts of the underworld, his words a map to places that most people never even know exist.",
            "You wander through a vibrant market district where vendors shout their prices and haggle with customers over everything from fresh produce to stolen electronics, the air thick with the mingled scents of spices, street food, and the underlying musk of urban commerce. You engage in some spirited bargaining, managing to get better prices on various goods through a combination of charm, persistence, and the subtle art of negotiation that defines successful street-level trading.",
            "You stumble upon a gang recruitment drive taking place in a dimly lit parking lot, where charismatic leaders try to convince impressionable young men and women to join their crews with promises of money, power, and protection. The recruiters speak passionately about loyalty, territory, and the brotherhood of the streets, their words painting a picture of excitement and danger that both repels and attracts those looking for a way to escape the drudgery of ordinary life in the city.",
            "You discover an abandoned subway entrance overgrown with weeds, its rusted turnstiles standing guard over darkness that seems to swallow light itself. The faint echo of dripping water and distant train rumblings creates an eerie symphony that makes you wonder what secrets might lie in the labyrinthine tunnels below the city streets.",
            "You pass by a group of street kids playing dice in a filthy alley, their laughter cutting through the urban decay like shards of broken glass. One of them notices you watching and challenges you to a game, his eyes gleaming with the desperate hope of someone who's learned to survive on wits and luck alone in this unforgiving concrete jungle.",
            "You find yourself in a narrow alley where the buildings rise like canyon walls, blocking out the sky and creating a twilight world even in broad daylight. The air is thick with the competing scents of Chinese takeout, fresh bread from a nearby bakery, and the ever-present undercurrent of urban decay that defines life in the city's forgotten spaces.",
            "You stumble upon a makeshift memorial in a quiet side street - faded photographs, wilting flowers, and handwritten notes taped to a lamppost commemorating someone who fell victim to the city's endless cycle of violence. The sight gives you pause, a momentary reminder that beneath the bravado and brutality, there are real lives and real losses in this endless gang war.",
            "You encounter a street preacher standing on a milk crate, his voice rising above the traffic noise as he rails against the sins of the city - the greed, the violence, the moral decay that has infected the soul of this once-great metropolis. His words cut deep, making you question whether you're part of the problem or just another victim of the system.",
            "You find a hidden courtyard behind a row of brownstones, a secret garden oasis where residents have created a communal space of potted plants, string lights, and weathered furniture. The peaceful atmosphere is a stark contrast to the chaos of the streets, offering a brief respite from the constant threat of violence that defines life in the city's underbelly.",
            "You pass through a bustling intersection where vendors hawk everything from bootleg DVDs to counterfeit designer bags, their voices rising in a cacophony of sales pitches that blend into the city's endless soundtrack. The energy is infectious, a reminder that despite the danger and decay, life in the city pulses with an undeniable vitality.",
            "You discover a forgotten loading dock behind an abandoned warehouse, its massive roll-up doors standing open like the maw of some industrial beast. Inside, you glimpse the skeletal remains of machinery long since stripped for parts, a testament to the city's relentless cycle of creation and destruction.",
            "You encounter a group of elderly men playing dominoes on a folding table in a tiny park, their laughter and banter cutting through the tension of the streets like a knife through butter. For a moment, you glimpse the human side of the city - the quiet dignity and resilience of those who have survived decades of urban warfare.",
            "You find yourself in a narrow pedestrian alley lined with boutique shops and upscale cafes, a gentrified oasis in the midst of decay where the wealthy come to pretend the city's problems don't exist. The contrast between this polished facade and the gritty reality just blocks away is almost comical in its absurdity.",
            "You stumble upon a community garden project where local residents have transformed a vacant lot into a thriving patch of vegetables and flowers, their determination to create beauty in the midst of urban blight a quiet act of defiance against the forces that seek to grind the human spirit into dust.",
            "You pass by a group of construction workers taking their lunch break, their hard hats stacked like trophies as they share stories of the city's underbelly - the hidden speakeasies, the underground fights, the secret deals that keep the city's economy flowing despite the endless gang warfare.",
            "You discover a tiny bookstore tucked away in a basement, its shelves crammed with rare volumes and forgotten tomes that speak of worlds beyond the city's concrete confines. The elderly proprietor looks up from his ledger with knowing eyes, as if he can see the stories written in the lines of your face.",
            "You find a public fountain in a small plaza, its waters dancing in the sunlight despite the grime and neglect that surrounds it. Local kids splash and play while their parents watch from benches, creating a momentary bubble of normalcy in the midst of the city's endless chaos.",
            "You encounter a food truck festival that has taken over a parking lot, the air thick with the competing aromas of tacos, falafel, and barbecue. The crowd's laughter and chatter create a festive atmosphere that temporarily drowns out the ever-present threat of violence lurking just beyond the food stalls.",
            "You discover an art installation in an empty lot - a massive mural depicting the city's history from its industrial glory days to its current state of gang warfare, the artist's message clear in the way the colors fade from vibrant hope to the bleak grays of despair.",
            "You pass through a residential neighborhood where front stoops serve as social centers, elderly residents watching the world go by from their rocking chairs while children play hopscotch on the cracked sidewalks. It's a reminder that despite the gangs and the violence, communities still thrive in the city's forgotten corners.",
            "You find a jazz club tucked away in a basement, its neon sign flickering weakly in the daylight but promising nights of soulful music and illicit pleasures. The doorman eyes you suspiciously, as if trying to decide whether you're a customer or a threat to the delicate balance of this underground oasis.",
            "You stumble upon a flea market in an abandoned parking garage, vendors hawking everything from vintage clothing to mysterious electronic devices of questionable origin. The air is thick with the scent of old books, incense, and the faint metallic tang of stolen goods.",
            "You encounter a group of skateboarders practicing tricks in an empty pool turned skate park, their laughter and the clatter of wheels on concrete creating a soundtrack of youthful rebellion that cuts through the city's oppressive atmosphere like a breath of fresh air.",
            "You discover a rooftop garden on an apartment building, where residents have created a hidden paradise of potted plants, string lights, and comfortable seating. From this vantage point, the city spreads out below like a living organism, its veins of traffic pulsing with the rhythm of urban life.",
            "You pass by a soup kitchen serving hot meals to the city's homeless population, the line of ragged figures a sobering reminder of the human cost of the endless gang warfare that has ravaged this once-proud metropolis.",
            "You find a public library branch in a converted storefront, its shelves stocked with books that offer escape from the city's grim reality. The librarian looks up from her desk with a welcoming smile, offering knowledge as a weapon against the ignorance that fuels the city's endless cycle of violence.",
            "You encounter a group of musicians busking on a street corner, their instruments weaving a tapestry of sound that transforms the urban decay into something almost beautiful. For a moment, the city's soul shines through the grime, reminding you that creativity and humanity still persist despite the gangs and the guns.",
            "You discover a community center offering free classes in everything from computer skills to self-defense, its walls covered with posters advertising programs designed to give the city's youth alternatives to the gang life that claims so many of their peers.",
            "You pass through a historic district where ornate brownstones stand as monuments to the city's more prosperous past, their elegant facades a stark contrast to the decay that has claimed so much of the surrounding neighborhood.",
            "You find a tiny coffee shop with outdoor seating, where patrons sip lattes and discuss everything from local politics to the latest gang turf disputes. The normalcy of the scene is almost surreal given the violence that simmers just beneath the surface of daily life.",
            "You stumble upon a protest march winding through the streets, activists carrying signs demanding an end to the gang violence that has claimed so many lives. Their chants rise above the traffic noise, a chorus of hope battling against the despair that has gripped the city for so long.",
            "You encounter a group of tourists taking photographs of the city's gritty architecture, their wide-eyed wonder at the urban decay a reminder that what locals see as normal is exotic to outsiders. Their presence creates a momentary buffer against the ever-present threat of violence.",
            "You discover a hidden courtyard behind a restaurant, where diners enjoy their meals in peaceful seclusion despite the chaos of the streets just beyond the ivy-covered walls. The contrast between this oasis of calm and the surrounding turmoil is almost dizzying.",
            "You pass by a fire station where firefighters wash their trucks, their laughter and camaraderie a reminder that not everyone in the city has given in to the cycle of violence. Their presence offers a glimmer of hope in the midst of the endless gang warfare.",
            "You find a pet adoption event in a park, where volunteers try to find homes for abandoned animals while local musicians provide entertainment. The scene of compassion and community stands as a quiet rebuke to the selfishness and brutality that define so much of city life.",
            "You encounter a group of cyclists pedaling through the streets, their brightly colored jerseys and aerodynamic helmets a splash of color in the gray urban landscape. Their presence suggests that life and vitality still exist beyond the gangs and the guns.",
            "You discover a tiny theater company performing in a converted garage, their production a biting satire of the city's gang culture that draws both laughter and uncomfortable recognition from the audience.",
            "You pass through a farmers market where local growers sell fresh produce and handmade goods, creating a vibrant contrast to the concrete and steel that dominates so much of the cityscape. The fresh scents and bright colors offer a momentary escape from the urban decay.",
            "You find a public chess tournament taking place in a park pavilion, where players of all ages and backgrounds compete in a battle of wits rather than weapons. The concentration on their faces and the quiet intensity of the games offer a glimpse of the city's intellectual life.",
            "You stumble upon a group of volunteers cleaning up a vacant lot, their efforts to reclaim the space from decay a small but meaningful act of resistance against the forces that seek to drag the city further into despair.",
            "You encounter a mobile health clinic parked on a street corner, offering free medical care to those who can't afford it. The nurses and doctors work tirelessly to heal both the physical and emotional wounds inflicted by the city's endless cycle of violence.",
            "You discover a poetry slam taking place in a coffee shop, where young poets pour out their frustrations and hopes in rhythmic verses that capture the essence of life in the city's underbelly. Their words cut deep, exposing the raw emotions that lie beneath the tough exteriors.",
            "You pass by a group of children playing in a sprinkler on a hot summer day, their laughter a pure and innocent sound that temporarily drowns out the sirens and gunshots that punctuate life in the city. For a moment, the future seems possible despite the darkness of the present.",
            "You find a veterans support group meeting in a community center, where former soldiers share their experiences and offer each other the camaraderie that helped them survive war, now applied to surviving the peacetime battle of urban life.",
            "You encounter a group of environmental activists planting trees in a barren lot, their efforts to bring green life back to the city a quiet but determined act of hope in the face of overwhelming decay.",
            "You discover a tiny museum dedicated to the city's history, its exhibits chronicling everything from the industrial revolution that built the metropolis to the gang wars that threaten to tear it apart. The curator shares fascinating stories of the city's past glories and future possibilities.",
            "You pass through a neighborhood watch meeting in a local school, where residents gather to discuss ways to protect their community from the encroaching gang violence. Their determination to take back their streets offers a glimmer of hope in the darkness.",
            "You find a group of retirees volunteering at a local food bank, their wisdom and compassion a steadying influence in a city that often seems to have lost its moral compass in the fog of endless warfare.",
            "You stumble upon a flash mob dance performance in a public square, where ordinary people suddenly transform into a coordinated spectacle of movement and joy. The unexpected beauty of the moment cuts through the city's grim facade like a ray of sunlight through storm clouds.",
            "You encounter a group of scientists conducting urban ecology research in a vacant lot, studying how nature reclaims abandoned spaces. Their work offers scientific insights into the city's decay and potential for renewal.",
            "You discover a hidden art gallery in a loft space, where local artists display works that capture the beauty and brutality of city life. The curator explains how creativity serves as both an escape from and a confrontation with the urban reality.",
            "You pass by a group of historians leading a walking tour of the city's architectural landmarks, sharing stories of the buildings' past lives and the people who built them. Their passion for the city's history offers a connection to a time before the gangs divided the streets.",
            "You find a meditation group practicing in a park, their peaceful presence a quiet counterpoint to the chaos that surrounds them. Their focused breathing and calm demeanor create a bubble of tranquility in the midst of urban turmoil.",
            "You encounter a group of entrepreneurs pitching startup ideas at a co-working space, their energy and optimism a reminder that innovation and ambition still thrive in the city's competitive ecosystem.",
            "You discover a community choir rehearsing in a church basement, their harmonious voices rising in songs of hope and resilience. The music creates a momentary sanctuary from the discord of the streets outside.",
            "You pass through a neighborhood where residents have created a block party atmosphere, with barbecues and music filling the air. The sense of community and celebration stands as a defiant act against the isolation and fear fostered by the gang warfare.",
            "You find a group of teachers leading an after-school program for at-risk youth, offering alternatives to the gang life that threatens to claim so many young lives. Their dedication offers hope for the city's future generations.",
            "You stumble upon a group of urban foragers collecting edible plants from vacant lots, their knowledge of the city's hidden resources a testament to human ingenuity and adaptation in the face of urban decay.",
            "You encounter a mobile library parked on a street corner, bringing books and knowledge to neighborhoods that lack traditional library access. The librarian shares stories of how reading has transformed lives amidst the city's challenges.",
            "You discover a group of architects designing affordable housing solutions in a community workshop, their blueprints offering visions of a more equitable city that could rise from the ashes of the current gang-dominated landscape.",
            "You pass by a group of journalists investigating corruption in city government, their determination to expose the truth a crucial counterbalance to the secrecy and deception that enable the gang warfare.",
            "You find a support group for victims of gang violence in a community center, where survivors share their stories and find strength in solidarity. Their resilience offers hope that healing is possible even in the darkest circumstances.",
            "You encounter a group of urban planners mapping out green spaces and bike lanes for a more livable city, their vision of sustainable urban development a direct challenge to the destructive forces that currently shape the metropolis.",
            "You discover a group of chefs running a community kitchen, transforming donated ingredients into nutritious meals for those affected by the city's economic struggles. Their creativity in the face of scarcity is inspiring.",
            "You pass through a neighborhood where residents have organized a clean-up day, working together to reclaim their streets from the litter and decay that symbolize the city's decline. Their collective action demonstrates the power of community.",
            "You find a group of therapists offering free counseling to those traumatized by the city's violence, their professional compassion a vital resource for healing the psychological wounds of urban warfare.",
            "You stumble upon a group of filmmakers documenting life in the city's underbelly, their cameras capturing both the horror and the humanity that coexist in the gang-controlled streets.",
            "You encounter a group of social workers advocating for policy changes to address the root causes of gang violence, their systemic approach offering hope for long-term solutions to the city's problems.",
            "You discover a group of religious leaders from different faiths working together to promote peace and reconciliation in gang-divided neighborhoods, their interfaith dialogue a beacon of hope in divided times.",
            "You pass by a group of union organizers helping workers fight for better conditions in the city's remaining industries, their advocacy a reminder that economic justice is intertwined with ending the cycle of violence.",
            "You find a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You encounter a group of data analysts studying crime patterns to help police target interventions more effectively, their evidence-based approach a scientific counter to the emotional chaos of gang warfare.",
            "You discover a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You pass through a neighborhood where residents have created a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",
            "You encounter a group of epidemiologists tracking the health consequences of chronic stress from living in high-violence neighborhoods, their findings highlighting the urgent need for comprehensive interventions.",
            "You discover a group of legal aid attorneys providing free representation to those caught in the criminal justice system, their work challenging the inequities that perpetuate the cycle of violence.",
            "You pass by a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You find a group of community organizers building coalitions across neighborhood lines to demand better city services and economic opportunities, their cross-community alliances weakening the divisions that gangs exploit.",
            "You encounter a group of trauma-informed educators training teachers to recognize and respond to the effects of violence on student learning, their work addressing the educational consequences of growing up in war zones.",
            "You discover a group of public health officials implementing harm reduction strategies to minimize the damage from drug-related gang activities, their pragmatic approach saving lives while working toward long-term solutions.",
            "You pass through a neighborhood where residents have established a community currency system to build local economic resilience, their alternative economy reducing dependence on the illicit markets that fund gang activities.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of urban designers creating public spaces that naturally discourage crime and promote positive social interactions, their environmental design approach offering passive crime prevention.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of mental health professionals specializing in trauma recovery for those affected by gang violence, their therapeutic interventions addressing the psychological roots of the city's problems.",
            "You pass by a group of community developers creating mixed-use spaces that combine housing, retail, and public amenities to strengthen neighborhood cohesion and reduce the isolation that breeds gang recruitment.",
            "You find a group of policy analysts developing evidence-based strategies for gang prevention, their research informing more effective interventions than traditional law enforcement approaches.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of cultural organizers promoting arts and cultural activities that build community pride and provide positive alternatives to gang involvement, their creative approaches celebrating the city's diverse heritage.",
            "You pass through a neighborhood where residents have established a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",
            "You encounter a group of epidemiologists tracking the health consequences of chronic stress from living in high-violence neighborhoods, their findings highlighting the urgent need for comprehensive interventions.",
            "You discover a group of legal aid attorneys providing free representation to those caught in the criminal justice system, their work challenging the inequities that perpetuate the cycle of violence.",
            "You pass by a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You find a group of community organizers building coalitions across neighborhood lines to demand better city services and economic opportunities, their cross-community alliances weakening the divisions that gangs exploit.",
            "You encounter a group of trauma-informed educators training teachers to recognize and respond to the effects of violence on student learning, their work addressing the educational consequences of growing up in war zones.",
            "You discover a group of public health officials implementing harm reduction strategies to minimize the damage from drug-related gang activities, their pragmatic approach saving lives while working toward long-term solutions.",
            "You pass through a neighborhood where residents have established a community currency system to build local economic resilience, their alternative economy reducing dependence on the illicit markets that fund gang activities.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of urban designers creating public spaces that naturally discourage crime and promote positive social interactions, their environmental design approach offering passive crime prevention.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of mental health professionals specializing in trauma recovery for those affected by gang violence, their therapeutic interventions addressing the psychological roots of the city's problems.",
            "You pass by a group of community developers creating mixed-use spaces that combine housing, retail, and public amenities to strengthen neighborhood cohesion and reduce the isolation that breeds gang recruitment.",
            "You find a group of policy analysts developing evidence-based strategies for gang prevention, their research informing more effective interventions than traditional law enforcement approaches.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of cultural organizers promoting arts and cultural activities that build community pride and provide positive alternatives to gang involvement, their creative approaches celebrating the city's diverse heritage.",
            "You pass through a neighborhood where residents have established a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",
            "You encounter a group of epidemiologists tracking the health consequences of chronic stress from living in high-violence neighborhoods, their findings highlighting the urgent need for comprehensive interventions.",
            "You discover a group of legal aid attorneys providing free representation to those caught in the criminal justice system, their work challenging the inequities that perpetuate the cycle of violence.",
            "You pass by a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You find a group of community organizers building coalitions across neighborhood lines to demand better city services and economic opportunities, their cross-community alliances weakening the divisions that gangs exploit.",
            "You encounter a group of trauma-informed educators training teachers to recognize and respond to the effects of violence on student learning, their work addressing the educational consequences of growing up in war zones.",
            "You discover a group of public health officials implementing harm reduction strategies to minimize the damage from drug-related gang activities, their pragmatic approach saving lives while working toward long-term solutions.",
            "You pass through a neighborhood where residents have established a community currency system to build local economic resilience, their alternative economy reducing dependence on the illicit markets that fund gang activities.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of urban designers creating public spaces that naturally discourage crime and promote positive social interactions, their environmental design approach offering passive crime prevention.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of mental health professionals specializing in trauma recovery for those affected by gang violence, their therapeutic interventions addressing the psychological roots of the city's problems.",
            "You pass by a group of community developers creating mixed-use spaces that combine housing, retail, and public amenities to strengthen neighborhood cohesion and reduce the isolation that breeds gang recruitment.",
            "You find a group of policy analysts developing evidence-based strategies for gang prevention, their research informing more effective interventions than traditional law enforcement approaches.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of cultural organizers promoting arts and cultural activities that build community pride and provide positive alternatives to gang involvement, their creative approaches celebrating the city's diverse heritage.",
            "You pass through a neighborhood where residents have established a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",
            "You encounter a group of epidemiologists tracking the health consequences of chronic stress from living in high-violence neighborhoods, their findings highlighting the urgent need for comprehensive interventions.",
            "You discover a group of legal aid attorneys providing free representation to those caught in the criminal justice system, their work challenging the inequities that perpetuate the cycle of violence.",
            "You pass by a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You find a group of community organizers building coalitions across neighborhood lines to demand better city services and economic opportunities, their cross-community alliances weakening the divisions that gangs exploit.",
            "You encounter a group of trauma-informed educators training teachers to recognize and respond to the effects of violence on student learning, their work addressing the educational consequences of growing up in war zones.",
            "You discover a group of public health officials implementing harm reduction strategies to minimize the damage from drug-related gang activities, their pragmatic approach saving lives while working toward long-term solutions.",
            "You pass through a neighborhood where residents have established a community currency system to build local economic resilience, their alternative economy reducing dependence on the illicit markets that fund gang activities.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of urban designers creating public spaces that naturally discourage crime and promote positive social interactions, their environmental design approach offering passive crime prevention.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of mental health professionals specializing in trauma recovery for those affected by gang violence, their therapeutic interventions addressing the psychological roots of the city's problems.",
            "You pass by a group of community developers creating mixed-use spaces that combine housing, retail, and public amenities to strengthen neighborhood cohesion and reduce the isolation that breeds gang recruitment.",
            "You find a group of policy analysts developing evidence-based strategies for gang prevention, their research informing more effective interventions than traditional law enforcement approaches.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of cultural organizers promoting arts and cultural activities that build community pride and provide positive alternatives to gang involvement, their creative approaches celebrating the city's diverse heritage.",
            "You pass through a neighborhood where residents have established a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",
            "You encounter a group of epidemiologists tracking the health consequences of chronic stress from living in high-violence neighborhoods, their findings highlighting the urgent need for comprehensive interventions.",
            "You discover a group of legal aid attorneys providing free representation to those caught in the criminal justice system, their work challenging the inequities that perpetuate the cycle of violence.",
            "You pass by a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You find a group of community organizers building coalitions across neighborhood lines to demand better city services and economic opportunities, their cross-community alliances weakening the divisions that gangs exploit.",
            "You encounter a group of trauma-informed educators training teachers to recognize and respond to the effects of violence on student learning, their work addressing the educational consequences of growing up in war zones.",
            "You discover a group of public health officials implementing harm reduction strategies to minimize the damage from drug-related gang activities, their pragmatic approach saving lives while working toward long-term solutions.",
            "You pass through a neighborhood where residents have established a community currency system to build local economic resilience, their alternative economy reducing dependence on the illicit markets that fund gang activities.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of urban designers creating public spaces that naturally discourage crime and promote positive social interactions, their environmental design approach offering passive crime prevention.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of mental health professionals specializing in trauma recovery for those affected by gang violence, their therapeutic interventions addressing the psychological roots of the city's problems.",
            "You pass by a group of community developers creating mixed-use spaces that combine housing, retail, and public amenities to strengthen neighborhood cohesion and reduce the isolation that breeds gang recruitment.",
            "You find a group of policy analysts developing evidence-based strategies for gang prevention, their research informing more effective interventions than traditional law enforcement approaches.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of cultural organizers promoting arts and cultural activities that build community pride and provide positive alternatives to gang involvement, their creative approaches celebrating the city's diverse heritage.",
            "You pass through a neighborhood where residents have established a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",
            "You encounter a group of epidemiologists tracking the health consequences of chronic stress from living in high-violence neighborhoods, their findings highlighting the urgent need for comprehensive interventions.",
            "You discover a group of legal aid attorneys providing free representation to those caught in the criminal justice system, their work challenging the inequities that perpetuate the cycle of violence.",
            "You pass by a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You find a group of community organizers building coalitions across neighborhood lines to demand better city services and economic opportunities, their cross-community alliances weakening the divisions that gangs exploit.",
            "You encounter a group of trauma-informed educators training teachers to recognize and respond to the effects of violence on student learning, their work addressing the educational consequences of growing up in war zones.",
            "You discover a group of public health officials implementing harm reduction strategies to minimize the damage from drug-related gang activities, their pragmatic approach saving lives while working toward long-term solutions.",
            "You pass through a neighborhood where residents have established a community currency system to build local economic resilience, their alternative economy reducing dependence on the illicit markets that fund gang activities.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of urban designers creating public spaces that naturally discourage crime and promote positive social interactions, their environmental design approach offering passive crime prevention.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of mental health professionals specializing in trauma recovery for those affected by gang violence, their therapeutic interventions addressing the psychological roots of the city's problems.",
            "You pass by a group of community developers creating mixed-use spaces that combine housing, retail, and public amenities to strengthen neighborhood cohesion and reduce the isolation that breeds gang recruitment.",
            "You find a group of policy analysts developing evidence-based strategies for gang prevention, their research informing more effective interventions than traditional law enforcement approaches.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of cultural organizers promoting arts and cultural activities that build community pride and provide positive alternatives to gang involvement, their creative approaches celebrating the city's diverse heritage.",
            "You pass through a neighborhood where residents have established a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",
            "You encounter a group of epidemiologists tracking the health consequences of chronic stress from living in high-violence neighborhoods, their findings highlighting the urgent need for comprehensive interventions.",
            "You discover a group of legal aid attorneys providing free representation to those caught in the criminal justice system, their work challenging the inequities that perpetuate the cycle of violence.",
            "You pass by a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You find a group of community organizers building coalitions across neighborhood lines to demand better city services and economic opportunities, their cross-community alliances weakening the divisions that gangs exploit.",
            "You encounter a group of trauma-informed educators training teachers to recognize and respond to the effects of violence on student learning, their work addressing the educational consequences of growing up in war zones.",
            "You discover a group of public health officials implementing harm reduction strategies to minimize the damage from drug-related gang activities, their pragmatic approach saving lives while working toward long-term solutions.",
            "You pass through a neighborhood where residents have established a community currency system to build local economic resilience, their alternative economy reducing dependence on the illicit markets that fund gang activities.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of urban designers creating public spaces that naturally discourage crime and promote positive social interactions, their environmental design approach offering passive crime prevention.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of mental health professionals specializing in trauma recovery for those affected by gang violence, their therapeutic interventions addressing the psychological roots of the city's problems.",
            "You pass by a group of community developers creating mixed-use spaces that combine housing, retail, and public amenities to strengthen neighborhood cohesion and reduce the isolation that breeds gang recruitment.",
            "You find a group of policy analysts developing evidence-based strategies for gang prevention, their research informing more effective interventions than traditional law enforcement approaches.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of cultural organizers promoting arts and cultural activities that build community pride and provide positive alternatives to gang involvement, their creative approaches celebrating the city's diverse heritage.",
            "You pass through a neighborhood where residents have established a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",
            "You encounter a group of epidemiologists tracking the health consequences of chronic stress from living in high-violence neighborhoods, their findings highlighting the urgent need for comprehensive interventions.",
            "You discover a group of legal aid attorneys providing free representation to those caught in the criminal justice system, their work challenging the inequities that perpetuate the cycle of violence.",
            "You pass by a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You find a group of community organizers building coalitions across neighborhood lines to demand better city services and economic opportunities, their cross-community alliances weakening the divisions that gangs exploit.",
            "You encounter a group of trauma-informed educators training teachers to recognize and respond to the effects of violence on student learning, their work addressing the educational consequences of growing up in war zones.",
            "You discover a group of public health officials implementing harm reduction strategies to minimize the damage from drug-related gang activities, their pragmatic approach saving lives while working toward long-term solutions.",
            "You pass through a neighborhood where residents have established a community currency system to build local economic resilience, their alternative economy reducing dependence on the illicit markets that fund gang activities.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of urban designers creating public spaces that naturally discourage crime and promote positive social interactions, their environmental design approach offering passive crime prevention.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of mental health professionals specializing in trauma recovery for those affected by gang violence, their therapeutic interventions addressing the psychological roots of the city's problems.",
            "You pass by a group of community developers creating mixed-use spaces that combine housing, retail, and public amenities to strengthen neighborhood cohesion and reduce the isolation that breeds gang recruitment.",
            "You find a group of policy analysts developing evidence-based strategies for gang prevention, their research informing more effective interventions than traditional law enforcement approaches.",
            "You encounter a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You discover a group of cultural organizers promoting arts and cultural activities that build community pride and provide positive alternatives to gang involvement, their creative approaches celebrating the city's diverse heritage.",
            "You pass through a neighborhood where residents have established a community land trust to prevent gentrification and preserve affordable housing, their collective ownership model a direct challenge to the economic forces that fuel gang recruitment.",
            "You find a group of conflict resolution specialists training community leaders in mediation techniques, equipping them with tools to resolve disputes before they escalate into violence.",
            "You stumble upon a group of economists studying the economic impact of gang violence on the city's development, their research providing data-driven arguments for investing in prevention rather than reaction.",
            "You encounter a group of epidemiologists tracking the health consequences of chronic stress from living in high-violence neighborhoods, their findings highlighting the urgent need for comprehensive interventions.",
            "You discover a group of legal aid attorneys providing free representation to those caught in the criminal justice system, their work challenging the inequities that perpetuate the cycle of violence.",
            "You pass by a group of restorative justice practitioners facilitating dialogues between gang members and their victims, their work offering alternatives to the endless cycle of retaliation and revenge.",
            "You find a group of community organizers building coalitions across neighborhood lines to demand better city services and economic opportunities, their cross-community alliances weakening the divisions that gangs exploit.",
            "You encounter a group of trauma-informed educators training teachers to recognize and respond to the effects of violence on student learning, their work addressing the educational consequences of growing up in war zones.",

        # Apply effects based on the result
        if "wallet with $50" in result:
            game_state.money += 50
        elif "discarded drugs worth $200" in result:
            game_state.money += 200
        elif "find a quiet spot" in result:
            game_state.health = min(100, game_state.health + 10)
        elif "hidden stash of weapons" in result:
            game_state.weapons.bullets += 5
        elif "without incident" not in result and "trouble" not in result and "police" not in result:
            # Minor health damage for risky wanders
            if random.random() < 0.3:
                game_state.health = max(0, game_state.health - 5)

    # Increment steps
    game_state.steps += 1

    # Check if day ends
    if game_state.steps >= game_state.max_steps:
        game_state.day += 1
        game_state.steps = 0
        # Reset some daily things if needed

    # Check for NPC encounter (15% chance, down from 30% since we have more events now)
    if random.random() < 0.15 and npcs_data:
        wander_npcs = [npc for npc in npcs_data.values() if npc['location'] == 'wander']
        if wander_npcs:
            npc = random.choice(wander_npcs)
            save_game_state(game_state)
            return render_template('npc_interaction.html', npc=npc, action='encounter', message=f"You encounter {npc['name']}. {npc['description']}", game_state=game_state)

    save_game_state(game_state)

    return render_template('wander_result.html', game_state=game_state, result=result)

@app.route('/picknsave')
def picknsave():
    """Pick n Save grocery store"""
    game_state = get_game_state()
    game_state.current_location = "picknsave"
    save_game_state(game_state)
    return render_template('picknsave.html', game_state=game_state)

@app.route('/picknsave_action', methods=['POST'])
def picknsave_action():
    """Handle Pick n Save actions"""
    game_state = get_game_state()
    action = request.form.get('action')

    if action == 'buy_food':
        if game_state.money >= 500:
            game_state.money -= 500
            flash("You bought food supplies for your gang! Morale is high.", "success")
        else:
            flash("You don't have enough money for food supplies!", "danger")

    elif action == 'buy_medical':
        if game_state.money >= 1000:
            game_state.money -= 1000
            game_state.health = min(100, game_state.health + 50)  # Heal up to 100
            flash("You bought medical supplies! Health restored.", "success")
        else:
            flash("You don't have enough money for medical supplies!", "danger")

    elif action == 'buy_id':
        if game_state.money >= 5000:
            game_state.money -= 5000
            game_state.flags.has_id = True
            flash("You bought a fake ID! You're now protected from random police checks.", "success")
        else:
            flash("You don't have enough money for a fake ID!", "danger")

    elif action == 'buy_info':
        if game_state.money >= 2000:
            game_state.money -= 2000
            game_state.flags.has_info = True
            flash("You bought information! You now have insider knowledge about police activity.", "success")
        else:
            flash("You don't have enough money for information!", "danger")

    elif action == 'recruit':
        if game_state.money >= 10000:
            game_state.money -= 10000
            game_state.members += 1
            flash("You recruited a new gang member! Your gang grows stronger.", "success")
        else:
            flash("You don't have enough money to recruit a new member!", "danger")

    save_game_state(game_state)
    return redirect(url_for('picknsave'))

@app.route('/trade_drugs', methods=['POST'])
def trade_drugs():
    """Handle drug trading actions"""
    game_state = get_game_state()
    action = request.form.get('action')
    drug_type = request.form.get('drug_type')
    quantity = int(request.form.get('quantity', 1))

    if drug_type not in game_state.drug_prices:
        flash("Invalid drug type!", "danger")
        return redirect(url_for('crackhouse'))

    price = game_state.drug_prices[drug_type]

    if action == 'buy':
        cost = price * quantity
        if game_state.money >= cost:
            game_state.money -= cost
            setattr(game_state.drugs, drug_type, getattr(game_state.drugs, drug_type) + quantity)
            flash(f"You bought {quantity} kilo(s) of {drug_type} for ${cost:,}!", "success")
        else:
            flash(f"You don't have enough money! Need ${cost:,}.", "danger")
    elif action == 'sell':
        current_qty = getattr(game_state.drugs, drug_type)
        if current_qty >= quantity:
            setattr(game_state.drugs, drug_type, current_qty - quantity)
            revenue = price * quantity
            game_state.money += revenue
            flash(f"You sold {quantity} kilo(s) of {drug_type} for ${revenue:,}!", "success")

            # Chance to recruit new member from big drug sales
            if revenue >= 5000:  # Big sale threshold
                if random.random() < 0.25:  # 25% chance for big sales
                    game_state.members += 1
                    flash("Word of your successful drug operation spread! A new recruit joined your gang!", "success")
        else:
            flash(f"You don't have enough {drug_type} to sell!", "danger")

    save_game_state(game_state)
    return redirect(url_for('crackhouse'))

@app.route('/bulk_purchase', methods=['POST'])
def bulk_purchase():
    """Handle bulk drug purchases from Steve's Closet"""
    game_state = get_game_state()
    drug_type = request.form.get('drug_type')
    quantity = int(request.form.get('quantity', 1))

    if drug_type not in game_state.drug_prices:
        flash("Invalid drug type!", "danger")
        return redirect(url_for('closet'))

    regular_price = game_state.drug_prices[drug_type]
    bulk_price = int(regular_price * 0.8)  # 20% discount for 10+ kilos
    total_cost = bulk_price * quantity

    if game_state.money >= total_cost:
        game_state.money -= total_cost
        setattr(game_state.drugs, drug_type, getattr(game_state.drugs, drug_type) + quantity)
        flash(f"Bulk purchase successful! Bought {quantity} kilos of {drug_type} for ${total_cost:,} (20% discount applied)!", "success")
    else:
        flash(f"You don't have enough money! Need ${total_cost:,}.", "danger")

    save_game_state(game_state)
    return redirect(url_for('closet'))

@app.route('/closet')
def closet():
    """Steve's Secret Closet"""
    game_state = get_game_state()
    game_state.current_location = "closet"
    save_game_state(game_state)
    return render_template('closet.html', game_state=game_state)

@app.route('/search_closet')
def search_closet():
    """Search Steve's Secret Closet for hidden treasures"""
    game_state = get_game_state()

    # Only allow searching if in closet
    if game_state.current_location != "closet":
        flash("You need to be in Steve's Closet to search it!", "warning")
        return redirect(url_for('bar'))

    search_result = random.random()

    if search_result < 0.05:  # 5% chance - major drug stash
        drug_types = ['weed', 'crack', 'coke', 'ice', 'pixie_dust']
        drug = random.choice(drug_types)
        amount = random.randint(15, 30)
        setattr(game_state.drugs, drug, getattr(game_state.drugs, drug) + amount)
        result = f"You find a hidden compartment! Steve must have forgotten about this stash. You gain {amount} kilos of {drug}!"
        flash(result, "success")

    elif search_result < 0.15:  # 10% chance - weapon cache
        weapons = [
            ('pistols', 1, "an extra pistol"),
            ('bullets', random.randint(20, 50), "bullets"),
            ('grenades', random.randint(2, 5), "grenades"),
            ('barbed_wire_bat', 1, "a barbed wire bat"),
            ('uzis', 1, "an Uzi with 25 bullets")
        ]
        weapon_choice = random.choice(weapons)
        if weapon_choice[0] == 'uzis':
            game_state.weapons.uzis += weapon_choice[1]
            game_state.weapons.bullets += 25
            result = f"You find a dusty crate containing {weapon_choice[2]}!"
        else:
            setattr(game_state.weapons, weapon_choice[0], getattr(game_state.weapons, weapon_choice[0]) + weapon_choice[1])
            result = f"You find a hidden weapons cache containing {weapon_choice[1]} {weapon_choice[2]}!"
        flash(result, "success")

    elif search_result < 0.25:  # 10% chance - money
        money_found = random.randint(500, 2000)
        game_state.money += money_found
        result = f"You discover an old safe hidden behind some boxes! You gain ${money_found:,}!"
        flash(result, "success")

    elif search_result < 0.35:  # 10% chance - trap/alarm
        damage = random.randint(5, 15)
        game_state.health = max(0, game_state.health - damage)
        result = f"You trigger a silent alarm system! Security arrives and roughs you up for {damage} damage!"
        flash(result, "danger")

    elif search_result < 0.50:  # 15% chance - small find
        small_finds = [
            ("some loose change", lambda: setattr(game_state, 'money', game_state.money + random.randint(25, 100))),
            ("a few stray bullets", lambda: setattr(game_state.weapons, 'bullets', game_state.weapons.bullets + random.randint(5, 15))),
            ("an old knife", lambda: setattr(game_state.weapons, 'knife', game_state.weapons.knife + 1))
        ]
        find = random.choice(small_finds)
        find[1]()
        result = f"You find {find[0]} while rummaging through the storage."
        flash(result, "info")

    else:  # 50% chance - nothing
        result = "You search thoroughly but find nothing out of the ordinary. Steve keeps his closet well-organized."
        flash(result, "info")

    # Increment steps for searching
    game_state.steps += 1
    if game_state.steps >= game_state.max_steps:
        game_state.day += 1
        game_state.steps = 0

    save_game_state(game_state)
    return redirect(url_for('closet'))

@app.route('/search_picknsave')
def search_picknsave():
    """Search Pick n' Save for hidden secrets"""
    game_state = get_game_state()

    # Only allow searching if in picknsave
    if game_state.current_location != "picknsave":
        flash("You need to be in Pick n' Save to search it!", "warning")
        return redirect(url_for('city'))

    search_result = random.random()

    if search_result < 0.03:  # 3% chance - rare item
        # Chance for special items
        special_items = [
            ("a fake ID kit", lambda: setattr(game_state.flags, 'has_id', True)),
            ("classified police documents", lambda: setattr(game_state.flags, 'has_info', True)),
            ("a gang recruitment flyer", lambda: setattr(game_state, 'members', game_state.members + 1))
        ]
        item = random.choice(special_items)
        item[1]()
        result = f"You find {item[0]} hidden in the store's back office!"
        flash(result, "success")

    elif search_result < 0.13:  # 10% chance - weapon
        weapons = [
            ('bullets', random.randint(10, 30), "bullets"),
            ('grenades', random.randint(1, 3), "grenades"),
            ('knife', 1, "a knife")
        ]
        weapon_choice = random.choice(weapons)
        setattr(game_state.weapons, weapon_choice[0], getattr(game_state.weapons, weapon_choice[0]) + weapon_choice[1])
        result = f"You find a hidden compartment containing {weapon_choice[1]} {weapon_choice[2]}!"
        flash(result, "success")

    elif search_result < 0.23:  # 10% chance - drugs
        drug_types = ['weed', 'crack', 'percs']
        drug = random.choice(drug_types)
        amount = random.randint(3, 8)
        setattr(game_state.drugs, drug, getattr(game_state.drugs, drug) + amount)
        result = f"You discover some contraband hidden in the storage room! You gain {amount} kilos of {drug}!"
        flash(result, "success")

    elif search_result < 0.33:  # 10% chance - money
        money_found = random.randint(200, 600)
        game_state.money += money_found
        result = f"You find a forgotten cash register drawer! You gain ${money_found:,}!"
        flash(result, "success")

    elif search_result < 0.43:  # 10% chance - trap
        damage = random.randint(8, 20)
        game_state.health = max(0, game_state.health - damage)
        result = f"You accidentally knock over some cleaning supplies! The store manager confronts you and deals {damage} damage!"
        flash(result, "danger")

    elif search_result < 0.58:  # 15% chance - small find
        small_finds = [
            ("some spare change", lambda: setattr(game_state, 'money', game_state.money + random.randint(15, 75))),
            ("a few loose bullets", lambda: setattr(game_state.weapons, 'bullets', game_state.weapons.bullets + random.randint(3, 10))),
            ("a candy bar", lambda: setattr(game_state, 'health', min(100, game_state.health + 5)))
        ]
        find = random.choice(small_finds)
        find[1]()
        result = f"You find {find[0]} while searching the shelves."
        flash(result, "info")

    else:  # 42% chance - nothing
        result = "You search the store discreetly but find nothing unusual. The employees are watching you closely."
        flash(result, "info")

    # Increment steps for searching
    game_state.steps += 1
    if game_state.steps >= game_state.max_steps:
        game_state.day += 1
        game_state.steps = 0

    save_game_state(game_state)
    return redirect(url_for('picknsave'))

@app.route('/visit_prostitutes')
def visit_prostitutes():
    """Visit Prostitutes"""
    game_state = get_game_state()
    return render_template('prostitutes.html', game_state=game_state)

@app.route('/prostitute_action', methods=['POST'])
def prostitute_action():
    """Handle prostitute service actions"""
    game_state = get_game_state()
    action = request.form.get('action')

    if action == 'quick_service':
        if game_state.money >= 200:
            game_state.money -= 200
            # Quick service restores some health
            health_gain = random.randint(5, 15)
            game_state.health = min(100, game_state.health + health_gain)
            flash(f"You enjoyed a quick service and gained {health_gain} health!", "success")
        else:
            flash("You don't have enough money for a quick service!", "danger")

    elif action == 'vip_experience':
        if game_state.money >= 500:
            game_state.money -= 500
            # VIP experience restores more health
            health_gain = random.randint(15, 30)
            game_state.health = min(100, game_state.health + health_gain)
            flash(f"You had a VIP experience and gained {health_gain} health!", "success")
        else:
            flash("You don't have enough money for a VIP experience!", "danger")

    elif action == 'recruit_hooker':
        if game_state.money >= 1000:
            game_state.money -= 1000
            game_state.members += 1
            # Recruiting also gives health boost
            health_gain = random.randint(10, 20)
            game_state.health = min(100, game_state.health + health_gain)
            flash(f"You recruited a hooker to your gang and gained {health_gain} health!", "success")
        else:
            flash("You don't have enough money to recruit a hooker!", "danger")

    save_game_state(game_state)
    return redirect(url_for('visit_prostitutes'))

@app.route('/search_deeper')
def search_deeper():
    """Search deeper when a secret has been found"""
    game_state = get_game_state()

    # Check if a secret was found
    if not session.get('secret_found', False):
        flash("You haven't found any secrets to search deeper for.", "info")
        return redirect(url_for('alleyway'))

    secret_room = session.get('secret_room', 'secret_room')

    # Clear the secret found flag
    session['secret_found'] = False
    session.modified = True

    # Better rewards for deeper search
    deeper_result = random.random()

    if deeper_result < 0.3:  # 30% chance - great reward
        if random.random() < 0.5:
            # Massive money find
            money_found = random.randint(1000, 3000)
            game_state.money += money_found
            result = f"You discover a hidden vault! You gain ${money_found:,}!"
            flash(result, "success")
        else:
            # Rare weapon
            rare_weapons = ['uzi', 'grenade', 'missile_launcher']
            weapon = random.choice(rare_weapons)
            if weapon == 'uzi':
                game_state.weapons.uzis += 1
                game_state.weapons.bullets += 50
                result = "You find a hidden Uzi with 50 bullets!"
            elif weapon == 'grenade':
                game_state.weapons.grenades += random.randint(2, 5)
                result = f"You find a crate of grenades! You gain {game_state.weapons.grenades} grenades!"
            elif weapon == 'missile_launcher':
                game_state.weapons.missile_launcher += 1
                game_state.weapons.missiles += random.randint(3, 8)
                result = f"You find a missile launcher with {game_state.weapons.missiles} missiles!"
            flash(result, "success")

    elif deeper_result < 0.6:  # 30% chance - good reward
        # Large drug stash
        drug_types = ['weed', 'crack', 'coke', 'ice']
        drug = random.choice(drug_types)
        amount = random.randint(8, 15)
        setattr(game_state.drugs, drug, getattr(game_state.drugs, drug) + amount)
        result = f"You find a major drug operation stash! You gain {amount} kilos of {drug}!"
        flash(result, "success")

    elif deeper_result < 0.8:  # 20% chance - trap
        damage = random.randint(25, 50)
        game_state.health = max(0, game_state.health - damage)
        result = f"You trigger a deadly trap! A collapsing wall crushes you for {damage} damage!"
        flash(result, "danger")

    else:  # 20% chance - moderate reward
        money_found = random.randint(500, 1500)
        game_state.money += money_found
        result = f"You find a concealed safe! You gain ${money_found:,}!"
        flash(result, "success")

    # Increment steps for deeper searching
    game_state.steps += 2  # Deeper search costs more time
    if game_state.steps >= game_state.max_steps:
        game_state.day += 1
        game_state.steps = 0

    save_game_state(game_state)
    return redirect(url_for('alleyway'))

@app.route('/search_room')
def search_room():
    """Search the current room for hidden treasures or traps"""
    game_state = get_game_state()

    # Get current room from session
    current_room_id = session.get('current_alleyway_room', 'entrance')
    current_room = rooms_data.get(current_room_id, rooms_data['entrance'])

    # Check if this room can be searched
    if not ('secret' in current_room['title'].lower() or 'mysterious' in current_room['description'].lower() or 'hidden' in current_room['title'].lower()):
        flash("There's nothing special to search for here.", "info")
        return redirect(url_for('alleyway'))

    # Determine search result based on room and random chance
    search_result = random.random()

    if current_room_id == 'secret_room':
        # Secret room has better rewards but also traps
        if search_result < 0.1:  # 10% chance - trap
            damage = random.randint(15, 35)
            game_state.health = max(0, game_state.health - damage)
            result = f"You trigger a trap! A hidden spike pit injures you for {damage} damage!"
            flash(result, "danger")
        elif search_result < 0.25:  # 15% chance - secret hint
            result = "You find a mysterious inscription on the wall: 'The true treasure lies deeper within.' You sense there might be more to discover!"
            flash(result, "warning")
            # Store that a secret was found for deeper search
            session['secret_found'] = True
            session['secret_room'] = current_room_id
            session.modified = True
        elif search_result < 0.45:  # 20% chance - weapon cache
            game_state.weapons.bullets += random.randint(10, 25)
            result = f"You find a hidden weapon cache! You gain {game_state.weapons.bullets} bullets!"
            flash(result, "success")
        elif search_result < 0.65:  # 20% chance - drug stash
            drug_types = ['weed', 'crack', 'coke']
            drug = random.choice(drug_types)
            amount = random.randint(2, 5)
            setattr(game_state.drugs, drug, getattr(game_state.drugs, drug) + amount)
            result = f"You discover a drug stash! You find {amount} kilos of {drug}!"
            flash(result, "success")
        elif search_result < 0.85:  # 20% chance - money
            money_found = random.randint(200, 800)
            game_state.money += money_found
            result = f"You find a hidden stash of cash! You gain ${money_found}!"
            flash(result, "success")
        else:  # 15% chance - nothing special
            result = "You search thoroughly but find nothing of value."
            flash(result, "info")

    elif current_room_id == 'hidden_entrance':
        # Hidden entrance has moderate rewards
        if search_result < 0.15:  # 15% chance - trap
            damage = random.randint(10, 25)
            game_state.health = max(0, game_state.health - damage)
            result = f"You disturb a sleeping rat colony! They attack you for {damage} damage!"
            flash(result, "danger")
        elif search_result < 0.4:  # 25% chance - small reward
            money_found = random.randint(50, 200)
            game_state.money += money_found
            result = f"You find some loose change and bills! You gain ${money_found}!"
            flash(result, "success")
        elif search_result < 0.6:  # 20% chance - ammo
            game_state.weapons.bullets += random.randint(5, 15)
            result = f"You find some discarded ammo! You gain {game_state.weapons.bullets} bullets!"
            flash(result, "success")
        else:  # 40% chance - nothing
            result = "The area looks like it's been searched before. Nothing here."
            flash(result, "info")

    elif current_room_id == 'underground':
        # Underground passage has mixed results
        if search_result < 0.2:  # 20% chance - trap
            damage = random.randint(20, 40)
            game_state.health = max(0, game_state.health - damage)
            result = f"You step on a pressure plate! Poison darts shoot out, dealing {damage} damage!"
            flash(result, "danger")
        elif search_result < 0.5:  # 30% chance - good reward
            if random.random() < 0.5:
                # Money
                money_found = random.randint(300, 600)
                game_state.money += money_found
                result = f"You find a waterproof bag with cash! You gain ${money_found}!"
            else:
                # Drugs
                drug_types = ['weed', 'crack']
                drug = random.choice(drug_types)
                amount = random.randint(3, 7)
                setattr(game_state.drugs, drug, getattr(game_state.drugs, drug) + amount)
                result = f"You find a hidden compartment with drugs! You gain {amount} kilos of {drug}!"
            flash(result, "success")
        else:  # 50% chance - minor find or nothing
            if random.random() < 0.3:
                game_state.weapons.bullets += random.randint(3, 8)
                result = f"You find a few loose bullets! You gain {game_state.weapons.bullets} bullets!"
                flash(result, "success")
            else:
                result = "The underground passage is damp and empty. Nothing of interest."
                flash(result, "info")

    else:
        # Generic secret areas
        if search_result < 0.25:  # 25% chance - trap
            damage = random.randint(5, 20)
            game_state.health = max(0, game_state.health - damage)
            result = f"You find a trap! You take {damage} damage!"
            flash(result, "danger")
        elif search_result < 0.6:  # 35% chance - small reward
            money_found = random.randint(25, 150)
            game_state.money += money_found
            result = f"You find some hidden money! You gain ${money_found}!"
            flash(result, "success")
        else:  # 40% chance - nothing
            result = "You search carefully but find nothing special."
            flash(result, "info")

    # Increment steps for searching
    game_state.steps += 1
    if game_state.steps >= game_state.max_steps:
        game_state.day += 1
        game_state.steps = 0

    save_game_state(game_state)
    return redirect(url_for('alleyway'))

@app.route('/move_room/<direction>')
def move_room(direction):
    """Move to a different room in the alleyway"""
    game_state = get_game_state()

    # Get current room from session, default to entrance
    current_room_id = session.get('current_alleyway_room', 'entrance')

    # Get the exit for the given direction
    if current_room_id in rooms_data and direction in rooms_data[current_room_id]['exits']:
        next_room = rooms_data[current_room_id]['exits'][direction]
        if next_room == 'city':
            # Special case: exit to city
            session['current_alleyway_room'] = 'entrance'  # Reset for next time
            session.modified = True
            return redirect(url_for('city'))
        else:
            # Move to new room
            session['current_alleyway_room'] = next_room
            session.modified = True
    else:
        # Invalid direction, stay in current room
        pass

    # Increment steps for exploration
    game_state.steps += 1
    if game_state.steps >= game_state.max_steps:
        game_state.day += 1
        game_state.steps = 0

    # Check for NPC encounter in alleyway
    if random.random() < 0.2 and npcs_data:
        alley_npcs = [npc for npc in npcs_data.values() if npc['location'] == 'alleyway']
        if alley_npcs:
            npc = random.choice(alley_npcs)
            message = f"You encounter {npc['name']}! They look hostile..."
            # Start MUD fight with NPC
            enemy_health = npc.get('hp', 50)  # Default 50 HP if not specified
            enemy_type = npc['name']
            combat_active = True
            combat_id = f"npc_{list(npcs_data.keys())[list(npcs_data.values()).index(npc)]}_{random.randint(1000, 9999)}"

            # Initialize fight log
            fight_log = [f"You encounter {npc['name']}! They look hostile...", f"Combat begins against {enemy_type}!"]
            session['fight_log'] = fight_log
            session.modified = True

            return render_template('mud_fight.html', game_state=game_state, enemy_health=enemy_health, enemy_type=enemy_type, enemy_count=1, combat_active=combat_active, combat_id=combat_id, npc_id=list(npcs_data.keys())[list(npcs_data.values()).index(npc)], fight_log=fight_log)

    save_game_state(game_state)

    return redirect(url_for('alleyway'))

@app.route('/new_game', methods=['GET', 'POST'])
def new_game():
    """Start a new game"""
    if request.method == 'POST':
        player_name = request.form.get('player_name', '').strip()
        gang_name = request.form.get('gang_name', '').strip()
        gender = request.form.get('gender', 'male')

        if not player_name or not gang_name:
            flash("Please fill in all required fields.", "danger")
            return redirect(url_for('new_game'))

        # Initialize new game state
        game_state = GameState()
        game_state.player_name = player_name
        game_state.gang_name = gang_name
        # Note: gender is collected but not currently used in game logic

        # Initialize starting weapons
        game_state.weapons.pistols = 1
        game_state.weapons.bullets = 10

        save_game_state(game_state)
        return redirect(url_for('city'))

    return render_template('new_game.html')

@app.route('/npc_interaction/<npc_id>')
def npc_interaction(npc_id):
    if npc_id not in npcs_data:
        return redirect(url_for('city'))
    npc = npcs_data[npc_id]
    game_state = get_game_state()
    return render_template('npc_interaction.html', npc=npc, action='encounter', message=f"You encounter {npc['name']}. {npc['description']}", game_state=game_state)

@app.route('/talk_to_npc/<npc_id>')
def talk_to_npc(npc_id):
    if npc_id not in npcs_data:
        return redirect(url_for('city'))
    npc = npcs_data[npc_id]
    game_state = get_game_state()
    message = f"{npc['name']} says: Hello, {game_state.player_name}. What can I do for you?"
    return render_template('npc_interaction.html', npc=npc, action='talk', message=message, game_state=game_state)

@app.route('/look_at_npc/<npc_id>')
def look_at_npc(npc_id):
    if npc_id not in npcs_data:
        return redirect(url_for('city'))
    npc = npcs_data[npc_id]
    game_state = get_game_state()
    message = f"You look closely at {npc['name']}. {npc['description']}"
    return render_template('npc_interaction.html', npc=npc, action='look', message=message, game_state=game_state)

@app.route('/trade_with_npc/<npc_id>')
def trade_with_npc(npc_id):
    if npc_id not in npcs_data:
        return redirect(url_for('city'))
    npc = npcs_data[npc_id]
    game_state = get_game_state()
    message = f"{npc['name']} offers to trade with you."
    return render_template('npc_interaction.html', npc=npc, action='trade', message=message, game_state=game_state)

@app.route('/fight_npc/<npc_id>', methods=['POST'])
def fight_npc(npc_id):
    if npc_id not in npcs_data:
        return redirect(url_for('city'))
    npc = npcs_data[npc_id]
    game_state = get_game_state()
    message = f"You engage in combat with {npc['name']}!"
    # Start MUD fight with NPC
    enemy_health = npc.get('hp', 50)  # Default 50 HP if not specified
    enemy_type = npc['name']
    combat_active = True
    combat_id = f"npc_{npc_id}_{random.randint(1000, 9999)}"

    # Initialize fight log
    fight_log = [f"You engage in combat with {npc['name']}!", f"Combat begins against {enemy_type}!"]
    session['fight_log'] = fight_log
    session.modified = True

    return render_template('mud_fight.html', game_state=game_state, enemy_health=enemy_health, enemy_type=enemy_type, enemy_count=1, combat_active=combat_active, combat_id=combat_id, npc_id=npc_id, fight_log=fight_log)

@app.route('/pickup_loot/<npc_id>')
def pickup_loot(npc_id):
    if npc_id not in npcs_data:
        return redirect(url_for('city'))
    npc = npcs_data[npc_id]
    game_state = get_game_state()
    if not npc['is_alive']:
        game_state.money += 100
        message = f"You search {npc['name']}'s body and find $100!"
    else:
        message = "You can't loot a living person."
    save_game_state(game_state)
    return render_template('npc_interaction.html', npc=npc, action='loot', message=message, game_state=game_state)

@app.route('/npcs')
def npcs():
    """View NPCs in current location"""
    game_state = get_game_state()
    location_npcs = [npc for npc in npcs_data.values() if npc.get('location') == game_state.current_location]
    return render_template('npcs.html', npcs=location_npcs, game_state=game_state)

@app.route('/cop_chase')
def cop_chase():
    """Police chase encounter - redirect to MUD fight system"""
    game_state = get_game_state()
    num_cops = random.randint(2, 6)
    message = f"Oh no! {num_cops} police officers spot you and give chase!"
    # Initialize MUD fight variables
    enemy_health = num_cops * 10  # Each cop has 10 health
    enemy_type = f"{num_cops} Police Officers"
    combat_active = True
    combat_id = f"police_{random.randint(1000, 9999)}"

    # Initialize fight log
    fight_log = [f"Oh no! {num_cops} police officers spot you and give chase!", f"Combat begins against {enemy_type}!"]
    session['fight_log'] = fight_log
    session.modified = True

    return render_template('mud_fight.html', game_state=game_state, enemy_health=enemy_health, enemy_type=enemy_type, enemy_count=num_cops, combat_active=combat_active, combat_id=combat_id, fight_log=fight_log)

@app.route('/fight_cops', methods=['POST'])
def fight_cops():
    """Handle police fight actions"""
    game_state = get_game_state()
    action = request.form.get('action')
    weapon = request.form.get('weapon')
    num_cops = int(request.form.get('num_cops', 2))

    if action == 'run':
        # Try to escape
        escape_chance = random.random()
        if escape_chance < 0.6:  # 60% chance to escape
            flash("You manage to escape the police chase!", "success")
            # Chance to recruit a impressed bystander
            if random.random() < 0.2:  # 20% chance
                game_state.members += 1
                flash("A bystander was impressed by your escape and joined your gang!", "success")
            save_game_state(game_state)
            return redirect(url_for('city'))
        else:
            # Failed to escape, take damage
            damage = random.randint(10, 30)
            if game_state.weapons.vest > 0:
                game_state.weapons.vest -= 1
                damage = max(0, damage - 20)  # Vest reduces damage
                message = f"You failed to escape! Your vest absorbed some damage but you still took {damage} damage."
            else:
                message = f"You failed to escape and took {damage} damage from police gunfire!"

            game_state.damage += damage
            if game_state.damage >= 10:
                game_state.lives -= 1
                final_damage = game_state.damage  # Store before resetting
                game_state.damage = 0
                game_state.health = 30
                enemy_type = f"{num_cops} Police Officers"
                enemy_count = num_cops
                if game_state.lives <= 0:
                    save_game_state(game_state)
                    fight_log = [f"You were defeated by {enemy_type} and took {final_damage} damage. This was your final life."]
                    return render_template('fight_defeat.html', game_state=game_state, enemy_type=enemy_type, enemy_count=enemy_count, final_damage=final_damage, fight_log=fight_log)
                else:
                    save_game_state(game_state)
                    fight_log = [f"You were defeated by {enemy_type} and took {final_damage} damage. You lost a life but can continue."]
                    return render_template('fight_defeat.html', game_state=game_state, enemy_type=enemy_type, enemy_count=enemy_count, final_damage=final_damage, fight_log=fight_log)

            # Return to MUD fight with updated state
            enemy_health = num_cops * 10
            enemy_type = f"{num_cops} Police Officers"
            combat_active = True
            combat_id = f"police_{random.randint(1000, 9999)}"
            return render_template('mud_fight.html', game_state=game_state, enemy_health=enemy_health, enemy_type=enemy_type, enemy_count=num_cops, combat_active=combat_active, combat_id=combat_id)

    elif action == 'shoot':
        # Combat with police
        if weapon == 'pistol' and game_state.weapons.bullets > 0:
            game_state.weapons.bullets -= 1
            cops_killed = min(num_cops, random.randint(1, 3))
            num_cops -= cops_killed

            # Police shoot back
            damage = random.randint(5, 25) * (num_cops if num_cops > 0 else 1)
            if game_state.weapons.vest > 0:
                game_state.weapons.vest -= 1
                damage = max(0, damage - 20)

            game_state.damage += damage

            if num_cops <= 0:
                flash(f"You killed all the cops and escaped! {cops_killed} officers down!", "success")
                save_game_state(game_state)
                return redirect(url_for('city'))
            else:
                message = f"You killed {cops_killed} cop(s) but {num_cops} remain and shot back! You took {damage} damage."
                if game_state.damage >= 10:
                    game_state.lives -= 1
                    final_damage = game_state.damage  # Store before resetting
                    game_state.damage = 0
                    game_state.health = 30
                    enemy_type = f"{num_cops} Police Officers"
                    enemy_count = num_cops
                    if game_state.lives <= 0:
                        save_game_state(game_state)
                        fight_log = [f"You were defeated by {enemy_type} and took {final_damage} damage. This was your final life."]
                        return render_template('fight_defeat.html', game_state=game_state, enemy_type=enemy_type, enemy_count=enemy_count, final_damage=final_damage, fight_log=fight_log)
                    else:
                        save_game_state(game_state)
                        fight_log = [f"You were defeated by {enemy_type} and took {final_damage} damage. You lost a life but can continue."]
                        return render_template('fight_defeat.html', game_state=game_state, enemy_type=enemy_type, enemy_count=enemy_count, final_damage=final_damage, fight_log=fight_log)

        elif weapon == 'uzi' and game_state.weapons.bullets > 0:
            game_state.weapons.bullets -= min(10, game_state.weapons.bullets)  # Uzi uses 10 bullets
            cops_killed = min(num_cops, random.randint(2, 5))
            num_cops -= cops_killed

            damage = random.randint(10, 40) * (num_cops if num_cops > 0 else 1)
            if game_state.weapons.vest > 0:
                game_state.weapons.vest -= 1
                damage = max(0, damage - 20)

            game_state.damage += damage

            if num_cops <= 0:
                flash(f"You sprayed the cops with your Uzi! {cops_killed} officers down!", "success")
                save_game_state(game_state)
                return redirect(url_for('city'))
            else:
                message = f"You sprayed {cops_killed} cop(s) but {num_cops} remain! Massive shootout - you took {damage} damage."

        elif weapon == 'grenade' and game_state.weapons.grenades > 0:
            game_state.weapons.grenades -= 1
            cops_killed = min(num_cops, random.randint(3, 6))
            num_cops -= cops_killed

            if num_cops <= 0:
                flash(f"Grenade explosion! {cops_killed} cops eliminated!", "success")
                save_game_state(game_state)
                return redirect(url_for('city'))
            else:
                damage = random.randint(20, 50)
                if game_state.weapons.vest > 0:
                    game_state.weapons.vest -= 1
                    damage = max(0, damage - 20)
                game_state.damage += damage
                message = f"Grenade blast killed {cops_killed} cops but you're hurt too! {damage} damage."

        elif weapon == 'missile_launcher' and game_state.weapons.missiles > 0:
            game_state.weapons.missiles -= 1
            cops_killed = num_cops  # Missile kills all remaining cops
            num_cops = 0

            damage = random.randint(30, 60)
            if game_state.weapons.vest > 0:
                game_state.weapons.vest -= 1
                damage = max(0, damage - 20)
            game_state.damage += damage

            flash(f"RPG blast! All {cops_killed} cops eliminated!", "success")
            save_game_state(game_state)
            return redirect(url_for('city'))

        elif weapon == 'knife':
            damage_to_player = random.randint(15, 35) * num_cops
            if game_state.weapons.vest > 0:
                game_state.weapons.vest -= 1
                damage_to_player = max(0, damage_to_player - 20)
            game_state.damage += damage_to_player
            message = f"You tried to fight with a knife but got overwhelmed! {damage_to_player} damage from {num_cops} cops."

        elif weapon == 'barbed_wire_bat' and game_state.weapons.barbed_wire_bat > 0:
            cops_killed = min(num_cops, random.randint(1, 2))  # Barbed wire bat kills 1-2 cops
            num_cops -= cops_killed

            damage = random.randint(5, 25) * (num_cops if num_cops > 0 else 1)
            if game_state.weapons.vest > 0:
                game_state.weapons.vest -= 1
                damage = max(0, damage - 20)
            game_state.damage += damage

            if num_cops <= 0:
                flash(f"You beat the cops senseless with your barbed wire bat! {cops_killed} officers down!", "success")
                save_game_state(game_state)
                return redirect(url_for('city'))
            else:
                message = f"You smashed {cops_killed} cop(s) with your barbed wire bat but {num_cops} remain! You took {damage} damage."

        # Check if player died
        if game_state.damage >= 10:
            game_state.lives -= 1
            final_damage = game_state.damage  # Store before resetting
            game_state.damage = 0
            game_state.health = 30
            enemy_type = f"{num_cops} Police Officers"
            enemy_count = num_cops
            if game_state.lives <= 0:
                save_game_state(game_state)
                fight_log = [f"You were defeated by {enemy_type} and took {final_damage} damage. This was your final life."]
                return render_template('fight_defeat.html', game_state=game_state, enemy_type=enemy_type, enemy_count=enemy_count, final_damage=final_damage, fight_log=fight_log)
            else:
                save_game_state(game_state)
                fight_log = [f"You were defeated by {enemy_type} and took {final_damage} damage. You lost a life but can continue."]
                return render_template('fight_defeat.html', game_state=game_state, enemy_type=enemy_type, enemy_count=enemy_count, final_damage=final_damage, fight_log=fight_log)

        # Return to MUD fight with updated state
        enemy_health = num_cops * 10
        enemy_type = f"{num_cops} Police Officers"
        combat_active = True
        combat_id = f"police_{random.randint(1000, 9999)}"
        return render_template('mud_fight.html', game_state=game_state, enemy_health=enemy_health, enemy_type=enemy_type, enemy_count=num_cops, combat_active=combat_active, combat_id=combat_id)

    save_game_state(game_state)
    return redirect(url_for('city'))

@app.route('/process_fight_action', methods=['POST'])
def process_fight_action():
    """Handle MUD-style fight actions"""
    game_state = get_game_state()
    combat_id = request.form.get('combat_id')
    action = request.form.get('action')
    weapon = request.form.get('weapon', 'pistol')
    drug = request.args.get('drug')

    # Get combat state from session (simplified - in real implementation you'd store full combat state)
    enemy_health = int(request.form.get('enemy_health', 30))
    enemy_type = request.form.get('enemy_type', 'Enemy')
    enemy_count = int(request.form.get('enemy_count', 1))

    # Initialize or get fight log from session
    fight_log = session.get('fight_log', [])
    if not fight_log:
        fight_log = [f"Combat begins against {enemy_type}!"]
        session['fight_log'] = fight_log
        session.modified = True

    # Process action
    if action == 'attack':
        weapon_name = weapon.replace('_', ' ').title()
        total_player_damage = 0

        # Player's attack with enhanced grim dark descriptions
        if weapon == 'pistol' and game_state.weapons.pistols > 0 and game_state.weapons.bullets > 0:
            game_state.weapons.bullets -= 1
            damage = random.randint(15, 25)
            total_player_damage += damage
            pistol_descriptions = [
                f"You squeeze the trigger, the pistol barking death as a .45 caliber slug punches through flesh, dealing {damage} damage!",
                f"The semi-automatic roars, hot lead tearing through vital organs in a spray of crimson, dealing {damage} damage!",
                f"You fire with cold precision, the bullet finding its mark and exploding out the back in a mist of blood, dealing {damage} damage!",
                f"The pistol's report echoes like thunder, your enemy's body jerking violently as the round rips through them, dealing {damage} damage!",
                f"You pull the trigger, the slide slamming back as the bullet drills through bone and sinew, dealing {damage} damage!"
            ]
            fight_log.append(random.choice(pistol_descriptions))
        elif weapon == 'ghost_gun' and game_state.weapons.ghost_guns > 0 and game_state.weapons.bullets > 0:
            game_state.weapons.bullets -= 1
            damage = random.randint(15, 25)
            total_player_damage += damage
            ghost_gun_descriptions = [
                f"The untraceable ghost gun whispers death, its bullet vanishing into a gaping wound that bleeds profusely, dealing {damage} damage!",
                f"You fire the unregistered weapon, the slug tearing through corrupted flesh in a shower of dark blood, dealing {damage} damage!",
                f"The ghost gun's silent killer round punches through, leaving a hole that no coroner can trace back to you, dealing {damage} damage!",
                f"You squeeze the trigger of your illicit firearm, the bullet finding purchase in rotting meat and shattered bone, dealing {damage} damage!",
                f"The ghost gun delivers its anonymous payload, the round exploding through vital organs in a cascade of gore, dealing {damage} damage!"
            ]
            fight_log.append(random.choice(ghost_gun_descriptions))
        elif weapon == 'uzi' and game_state.weapons.uzis > 0 and game_state.weapons.bullets >= 3:
            game_state.weapons.bullets -= 3
            damage = random.randint(20, 40)
            total_player_damage += damage
            uzi_descriptions = [
                f"The Uzi rattles like a chainsaw through wet meat, spraying hot lead that chews through bodies in a frenzy of destruction, dealing {damage} damage!",
                f"You unleash hell with the submachine gun, bullets stitching across torsos in bloody patterns of perforated flesh, dealing {damage} damage!",
                f"The Uzi's staccato bark fills the air as you hose down your enemies, their bodies dancing in the hail of copper-jacketed death, dealing {damage} damage!",
                f"You pull the trigger, the Israeli machine pistol vomiting forth a stream of 9mm justice that tears through limbs and lives, dealing {damage} damage!",
                f"The Uzi sings its song of lead, each bullet finding a home in ruptured organs and shattered bones, dealing {damage} damage!"
            ]
            fight_log.append(random.choice(uzi_descriptions))
        elif weapon == 'grenade' and game_state.weapons.grenades > 0:
            game_state.weapons.grenades -= 1
            damage = random.randint(30, 60)
            total_player_damage += damage
            grenade_descriptions = [
                f"You hurl the grenade with deadly precision! The explosion rips through the air in a deafening blast, shredding bodies into bloody confetti, dealing {damage} damage!",
                f"The fragmentation grenade detonates in their midst, shrapnel tearing through flesh like a thousand razor blades, leaving nothing but mangled corpses, dealing {damage} damage!",
                f"You pull the pin and throw, the grenade's explosion painting the walls with viscera as it vaporizes limbs and liquefies organs, dealing {damage} damage!",
                f"The pineapple erupts in a symphony of destruction, its deadly fruit scattering bone fragments and blood in a wide crimson arc, dealing {damage} damage!",
                f"You lob the explosive device, the blast wave tearing through bodies like wet paper, leaving behind a crater of ruined humanity, dealing {damage} damage!"
            ]
            fight_log.append(random.choice(grenade_descriptions))
        elif weapon == 'missile_launcher' and game_state.weapons.missile_launcher > 0 and game_state.weapons.missiles > 0:
            game_state.weapons.missiles -= 1
            damage = random.randint(50, 100)
            total_player_damage += damage
            missile_descriptions = [
                f"You unleash the RPG with a thunderous WHOOSH! The missile screams through the air before erupting in a fireball that consumes bodies whole, dealing {damage} damage!",
                f"The rocket-propelled grenade launches with apocalyptic fury, its warhead turning flesh to ash and bone to powder in an instant, dealing {damage} damage!",
                f"You fire the shoulder-mounted death bringer, the missile's explosion creating a crater of charred remains and vaporized blood, dealing {damage} damage!",
                f"The RPG roars like an angry god, its payload reducing your enemies to smoking craters of ruined meat and shattered dreams, dealing {damage} damage!",
                f"You squeeze the trigger, the missile streaking forth to deliver divine retribution in a mushroom cloud of obliterated humanity, dealing {damage} damage!"
            ]
            fight_log.append(random.choice(missile_descriptions))
        elif weapon == 'barbed_wire_bat' and game_state.weapons.barbed_wire_bat > 0:
            damage = random.randint(25, 45)
            total_player_damage += damage
            barbed_bat_descriptions = [
                f"You swing your barbed wire bat with savage force, the razor-sharp wire tearing through flesh and bone, leaving ragged gashes that bleed profusely, dealing {damage} damage!",
                f"The barbed wire bat connects with a sickening crunch, the barbs hooking into skin and muscle, ripping them apart in bloody shreds, dealing {damage} damage!",
                f"You bring the bat down with brutal force, the wire-wrapped weapon shredding everything in its path, leaving behind mangled, bleeding wounds, dealing {damage} damage!",
                f"The wire-wrapped bat smashes into your enemy, the barbs catching and tearing flesh from bone in a spray of arterial blood, dealing {damage} damage!",
                f"You swing wildly, the barbed wire catching and shredding your victim's body, leaving them a bloody, perforated mess, dealing {damage} damage!"
            ]
            fight_log.append(random.choice(barbed_bat_descriptions))
        elif weapon == 'knife':
            damage = random.randint(10, 20)
            total_player_damage += damage
            knife_descriptions = [
                f"You plunge the knife deep into their gut, twisting the blade to widen the wound as hot blood pours over your hands, dealing {damage} damage!",
                f"The blade sings through the air, finding purchase in soft flesh and scraping against bone in a symphony of agony, dealing {damage} damage!",
                f"You drive the knife home with surgical precision, the steel parting flesh and severing vital cords in a gush of crimson life, dealing {damage} damage!",
                f"The knife bites deep, carving through muscle and sinew, leaving behind a ragged wound that pulses with dark blood, dealing {damage} damage!",
                f"You stab with cold fury, the blade piercing vital organs and twisting to maximize the damage in a fountain of gore, dealing {damage} damage!"
            ]
            fight_log.append(random.choice(knife_descriptions))

        # Gang members' attacks (if player has gang members)
        gang_damage = 0
        if game_state.members > 1:  # Player + at least 1 gang member
            gang_member_count = min(game_state.members - 1, 5)  # Max 5 gang members attack per turn
            weapons_available = []

            # Check what weapons are available for gang members
            if game_state.weapons.pistols > 1 and game_state.weapons.bullets >= gang_member_count:
                weapons_available.append('pistol')
            if game_state.weapons.uzis > 0 and game_state.weapons.bullets >= gang_member_count * 3:
                weapons_available.append('uzi')
            if game_state.weapons.barbed_wire_bat > 0:
                weapons_available.append('barbed_wire_bat')
            if game_state.weapons.knife > 0:
                weapons_available.append('knife')

            if weapons_available:
                # Each gang member gets a chance to attack
                for i in range(gang_member_count):
                    if enemy_health <= 0:
                        break

                    weapon_choice = random.choice(weapons_available)
                    member_damage = 0

                    if weapon_choice == 'pistol' and game_state.weapons.bullets > 0:
                        game_state.weapons.bullets -= 1
                        member_damage = random.randint(10, 20)
                    elif weapon_choice == 'uzi' and game_state.weapons.bullets >= 3:
                        game_state.weapons.bullets -= 3
                        member_damage = random.randint(15, 30)
                    elif weapon_choice == 'barbed_wire_bat':
                        member_damage = random.randint(15, 25)
                    elif weapon_choice == 'knife':
                        member_damage = random.randint(8, 15)

                    if member_damage > 0:
                        gang_damage += member_damage
                        fight_log.append(f"Gang member {i+1} attacks with {weapon_choice.replace('_', ' ')}, dealing {member_damage} damage!")

        # Apply total damage
        enemy_health -= (total_player_damage + gang_damage)

        # Enemy attacks back with enhanced vest descriptions
        if enemy_health > 0:
            enemy_damage = random.randint(5, 15) * enemy_count
            if game_state.weapons.vest > 0 and random.random() < 0.5:
                game_state.weapons.vest -= 1
                original_damage = enemy_damage
                enemy_damage = max(0, enemy_damage - 20)
                vest_descriptions = [
                    f"The {enemy_type} unleash a hail of bullets! Your bulletproof vest catches the rounds with a series of dull THUNKS, saving you from {original_damage - enemy_damage} damage, but you still take {enemy_damage}!",
                    f"Hot lead flies your way! Your vest absorbs the impact like a steel embrace, stopping {original_damage - enemy_damage} damage worth of slugs, leaving you with only {enemy_damage} wounds!",
                    f"The enemy gunfire rips through the air! Your Kevlar vest blooms with bullet holes as it sacrifices itself, reducing the damage from {original_damage} to {enemy_damage}!",
                    f"Bullets scream toward you! Your protective vest turns the lethal projectiles into mere bruises, absorbing {original_damage - enemy_damage} damage and leaving you with {enemy_damage} survivable wounds!",
                    f"The {enemy_type} counterattack with deadly force! Your bullet-resistant vest crumples under the assault but holds, sparing you {original_damage - enemy_damage} damage and leaving {enemy_damage} bruises!"
                ]
                fight_log.append(random.choice(vest_descriptions))
            else:
                game_state.damage += enemy_damage
                enemy_attack_descriptions = [
                    f"The {enemy_type} counterattack with savage fury, their weapons unleashing a storm of lead that tears through your defenses, dealing {enemy_damage} damage!",
                    f"Enemy fire erupts around you! Bullets find their mark, ripping through flesh and bone in a symphony of agony, dealing {enemy_damage} damage!",
                    f"The {enemy_type} press their attack! Their gunfire punches through your guard, leaving bloody craters in your body for {enemy_damage} damage!",
                    f"Return fire comes swift and brutal! The enemy's weapons bark death, their projectiles drilling through vital areas for {enemy_damage} damage!",
                    f"The {enemy_type} unleash hell upon you! Their assault leaves you perforated and bleeding, suffering {enemy_damage} grievous wounds!"
                ]
                fight_log.append(random.choice(enemy_attack_descriptions))

    elif action == 'defend':
        # Reduced enemy damage
        if enemy_health > 0:
            enemy_damage = random.randint(2, 10) * enemy_count
            game_state.damage += enemy_damage
            fight_log.append(f"You defend carefully. The {enemy_type} deal {enemy_damage} damage!")

    elif action == 'flee':
        if random.random() < 0.4:  # 40% chance to flee
            fight_log.append("You successfully flee from combat!")
            session['fight_log'] = fight_log
            session.modified = True
            flash("You successfully flee from combat!", "success")
            save_game_state(game_state)
            return redirect(url_for('city'))
        else:
            # Enemy attacks during flee attempt
            enemy_damage = random.randint(10, 20) * enemy_count
            game_state.damage += enemy_damage
            fight_log.append(f"You try to flee but the {enemy_type} attack, dealing {enemy_damage} damage!")

    elif action == 'change_weapon':
        # No combat action, just return to fight with same state
        fight_log.append("You take a moment to consider changing weapons.")

    elif action == 'use_drug':
        # Handle drug usage with enhanced grim dark descriptions
        drug_name = drug.title() if drug else "Unknown"
        if drug and hasattr(game_state.drugs, drug) and getattr(game_state.drugs, drug) > 0:
            setattr(game_state.drugs, drug, getattr(game_state.drugs, drug) - 1)

            if drug == 'crack':
                game_state.damage += 5
                crack_descriptions = [
                    f"You smoke the crack, the bitter smoke filling your lungs as demonic energy surges through your veins, dealing 5 damage but granting unholy strength!",
                    f"The crack rock sizzles as you inhale, your heart pounding like a war drum in your chest, taking 5 damage but awakening the beast within!",
                    f"You light the crack pipe, the acrid smoke burning your throat as infernal power floods your muscles, suffering 5 damage for the dark gift of rage!",
                    f"The crack cocaine ignites in your pipe, sending waves of hellish energy through your body, costing 5 damage but unleashing your inner demon!",
                    f"You take a deep drag of crack, the toxic smoke searing your lungs as satanic power courses through you, taking 5 damage for apocalyptic might!"
                ]
                fight_log.append(random.choice(crack_descriptions))

            elif drug == 'percs':
                healed = min(10, game_state.damage)
                game_state.damage = max(0, game_state.damage - 10)
                percs_descriptions = [
                    f"You swallow the Percocet, the opioid flooding your system with blessed numbness, healing {healed} damage as pain becomes a distant memory!",
                    f"The Percs dissolve on your tongue, divine analgesia washing away your wounds, restoring {healed} damage in a haze of chemical bliss!",
                    f"You pop the painkillers, the oxycodone wrapping your injuries in cottony oblivion, healing {healed} damage as agony fades to nothing!",
                    f"The Percocet tablets slide down your throat, their morphine embrace mending your broken flesh, restoring {healed} damage in narcotic serenity!",
                    f"You crush and snort the Percs, the instant rush of euphoria sealing your wounds, healing {healed} damage as pain surrenders to pharmaceutical peace!"
                ]
                fight_log.append(random.choice(percs_descriptions))

            elif drug == 'weed':
                weed_descriptions = [
                    f"You take a massive hit of weed, the THC flooding your brain with paranoid clarity, sharpening your senses but making shadows dance with menace!",
                    f"The marijuana smoke fills your lungs, heightening your awareness to supernatural levels, seeing threats in every flicker of movement!",
                    f"You inhale deeply, the cannabis awakening ancient instincts, your mind racing with tactical insights born of herbal madness!",
                    f"The weed burns bright in your joint, unlocking hidden perceptions, every sound and shadow revealing enemy positions!",
                    f"You toke the reefer, the psychoactive compounds enhancing your combat awareness, turning you into a paranoid tactical genius!"
                ]
                fight_log.append(random.choice(weed_descriptions))

            elif drug == 'coke':
                coke_descriptions = [
                    f"You snort the cocaine, the white powder igniting your nervous system like lightning through your veins, precision and speed becoming one!",
                    f"The coke burns up your nostrils, flooding your brain with crystalline focus, every movement becoming lethally accurate!",
                    f"You rail the cocaine, the stimulant transforming you into a perfect killing machine, reflexes sharper than any blade!",
                    f"The powder explodes in your sinuses, cocaine-fueled precision making your aim supernatural, bullets finding their mark with unholy accuracy!",
                    f"You inhale the coke, the drug sharpening your senses to razor edges, every twitch and tremor of your enemies laid bare before you!"
                ]
                fight_log.append(random.choice(coke_descriptions))

            elif drug == 'ice':
                ice_descriptions = [
                    f"You smoke the crystal meth, the ice burning through your veins like molten lava, granting superhuman strength but eroding your very soul!",
                    f"The methamphetamine crystals vaporize in your pipe, flooding your body with demonic energy, muscles bulging with unholy power!",
                    f"You take a hit of ice, the meth surging through you like battery acid, awakening a strength that could shatter mountains!",
                    f"The crystal meth ignites in your lungs, transforming your flesh into living steel, power beyond human limits coursing through you!",
                    f"You inhale the ice, the methamphetamine awakening primal fury, your body becoming a vessel for destructive might!"
                ]
                fight_log.append(random.choice(ice_descriptions))

            elif drug == 'pixie_dust':
                pixie_dust_descriptions = [
                    f"You snort the pixie dust, reality warping around you as the mysterious powder unleashes unknown energies, effects unpredictable and terrifying!",
                    f"The pixie dust dissolves on your tongue, opening doors to other dimensions, your body tingling with energies beyond mortal comprehension!",
                    f"You inhale the enigmatic powder, the pixie dust rewriting reality itself, strange forces awakening within your flesh!",
                    f"The dust burns in your nostrils, pixie magic flooding your system, reality bending to accommodate the impossible!",
                    f"You consume the pixie dust, the powder's arcane properties awakening dormant powers, your body becoming a conduit for the unknown!"
                ]
                fight_log.append(random.choice(pixie_dust_descriptions))

        else:
            fight_log.append(f"You frantically search for {drug_name} but find none, your hands shaking with desperate need!")

    # Check win/lose conditions
    if enemy_health <= 0:
        # Handle NPC-specific victory logic
        npc_id = request.form.get('npc_id')
        if npc_id and npc_id in npcs_data:
            npcs_data[npc_id]['is_alive'] = False
            with open('npcs.json', 'w') as f:
                json.dump(npcs_data, f, indent=2)
            game_state.money += 100  # Loot from defeated NPC
            fight_log.append(f"You defeated {npcs_data[npc_id]['name']} and looted $100!")

        # Chance to recruit a defeated enemy as a gang member
        if enemy_type != "Police Officers" and random.random() < 0.3:  # 30% chance
            game_state.members += 1
            fight_log.append("One of your defeated enemies has joined your gang!")

        fight_log.append(f"VICTORY! You have defeated {enemy_type}!")
        save_game_state(game_state)

        # Show victory outcome in mud fight template before redirect
        combat_active = False
        return render_template('mud_fight.html', game_state=game_state, enemy_health=enemy_health, enemy_type=enemy_type, enemy_count=enemy_count, combat_active=combat_active, combat_id=combat_id, fight_log=fight_log, victory=True)
    elif game_state.damage >= 10:
        game_state.lives -= 1
        final_damage = game_state.damage  # Store the final damage before resetting
        game_state.damage = 0
        game_state.health = 30
        fight_log.append(f"You were defeated by {enemy_type} and took {final_damage} damage!")
        if game_state.lives <= 0:
            fight_log.append("This was your final life.")
        else:
            fight_log.append("You lost a life but can continue.")
        save_game_state(game_state)

        # Show defeat outcome in mud fight template
        combat_active = False
        return render_template('mud_fight.html', game_state=game_state, enemy_health=enemy_health, enemy_type=enemy_type, enemy_count=enemy_count, combat_active=combat_active, combat_id=combat_id, fight_log=fight_log, defeat=True)

    # Continue combat
    save_game_state(game_state)
    combat_active = enemy_health > 0
    return render_template('mud_fight.html', game_state=game_state, enemy_health=enemy_health, enemy_type=enemy_type, enemy_count=enemy_count, combat_active=combat_active, combat_id=combat_id)

@app.route('/continue_after_fight', methods=['POST'])
def continue_after_fight():
    """Handle continue button after fight ends"""
    game_state = get_game_state()
    outcome = request.form.get('outcome')

    if outcome == 'victory':
        # Victory - return to city
        flash("Victory! You have successfully defeated your enemies!", "success")
        return redirect(url_for('city'))
    elif outcome == 'defeat':
        # Defeat - check if game over or continue
        if game_state.lives <= 0:
            # Game over
            return redirect(url_for('game_over'))
        else:
            # Continue with reduced lives
            flash(f"You were defeated but have {game_state.lives} lives remaining!", "warning")
            return redirect(url_for('city'))

    # Fallback
    return redirect(url_for('city'))

@app.route('/game_over')
def game_over():
    """Game Over screen"""
    game_state = get_game_state()
    return render_template('game_over.html', game_state=game_state)

# ============
# SocketIO Events
# ============

if socketio:
    @socketio.on('join')
    def handle_join(data):
        """Handle player joining a room"""
        room = data.get('room', 'global')
        location_room = data.get('location_room', 'city')
        player_name = data.get('player_name', 'Unknown Player')

        join_room(room)
        join_room(location_room)

        # Store player info
        connected_players[request.sid] = {
            'id': request.sid,
            'name': player_name,
            'room': location_room,
            'in_fight': False,
            'joined_at': time.time()
        }

        emit('status', {'msg': f'{player_name} joined the chat'})
        update_player_lists()

    @socketio.on('disconnect')
    def handle_disconnect():
        """Handle player disconnecting"""
        if request.sid in connected_players:
            player_name = connected_players[request.sid]['name']
            del connected_players[request.sid]
            emit('status', {'msg': f'{player_name} left the chat'}, broadcast=True)
            update_player_lists()

    @socketio.on('chat_message')
    def handle_chat_message(data):
        """Handle chat messages"""
        room = data.get('room', 'global')
        player_name = data.get('player_name', 'Unknown Player')
        message = data.get('message', '')

        if message.strip():
            emit('chat_message', {
                'player': player_name,
                'message': message,
                'room': room
            }, room=room)

    @socketio.on('get_player_list')
    def handle_get_player_list(data):
        """Send current player list to requesting client"""
        room = data.get('room', 'city')
        players_in_room = [
            player for player in connected_players.values()
            if player['room'] == room
        ]
        emit('player_list', {'players': players_in_room})

    @socketio.on('pvp_challenge')
    def handle_pvp_challenge(data):
        """Handle PVP challenge requests"""
        target_id = data.get('target_id')
        room = data.get('room', 'city')

        if target_id in connected_players:
            # For now, just send a notification
            emit('pvp_response', {
                'success': True,
                'message': 'PVP challenge sent!'
            })
            # In a real implementation, you'd handle the challenge logic here
        else:
            emit('pvp_response', {
                'success': False,
                'message': 'Player not found or unavailable.'
            })

    def update_player_lists():
        """Update player lists for all connected clients"""
        # Group players by room
        room_players = {}
        for player in connected_players.values():
            room = player['room']
            if room not in room_players:
                room_players[room] = []
            room_players[room].append(player)

        # Send updated lists to all clients in each room
        for room, players in room_players.items():
            socketio.emit('player_list', {'players': players}, room=room)
else:
    def update_player_lists():
        """Dummy function when SocketIO is disabled"""
        pass


if __name__ == '__main__':
    if socketio:
        socketio.run(app, debug=True)
    else:
        app.run(debug=True)
